{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MintNewEditionFromMasterEditionViaToken = exports.MintNewEditionFromMasterEditionViaTokenArgs = void 0;\n\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\n\nconst spl_token_1 = require(\"@solana/spl-token\");\n\nconst web3_js_1 = require(\"@solana/web3.js\");\n\nconst MetadataProgram_1 = require(\"../MetadataProgram\");\n\nclass MintNewEditionFromMasterEditionViaTokenArgs extends mpl_core_1.Borsh.Data {\n  constructor() {\n    super(...arguments);\n    this.instruction = 11;\n  }\n\n}\n\nexports.MintNewEditionFromMasterEditionViaTokenArgs = MintNewEditionFromMasterEditionViaTokenArgs;\nMintNewEditionFromMasterEditionViaTokenArgs.SCHEMA = MintNewEditionFromMasterEditionViaTokenArgs.struct([['instruction', 'u8'], ['edition', 'u64']]);\n\nclass MintNewEditionFromMasterEditionViaToken extends mpl_core_1.Transaction {\n  constructor(options, params) {\n    super(options);\n    const {\n      feePayer\n    } = options;\n    const {\n      edition,\n      metadata,\n      updateAuthority,\n      masterEdition,\n      masterMetadata,\n      mint,\n      editionMarker,\n      mintAuthority,\n      tokenOwner,\n      tokenAccount,\n      editionValue\n    } = params;\n    const data = MintNewEditionFromMasterEditionViaTokenArgs.serialize({\n      edition: editionValue\n    });\n    this.add(new web3_js_1.TransactionInstruction({\n      keys: [{\n        pubkey: metadata,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: edition,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: masterEdition,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: mint,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: editionMarker,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: mintAuthority,\n        isSigner: true,\n        isWritable: false\n      }, {\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: false\n      }, {\n        pubkey: tokenOwner,\n        isSigner: true,\n        isWritable: false\n      }, {\n        pubkey: tokenAccount,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: updateAuthority,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: masterMetadata,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: spl_token_1.TOKEN_PROGRAM_ID,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: web3_js_1.SystemProgram.programId,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: web3_js_1.SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }],\n      programId: MetadataProgram_1.MetadataProgram.PUBKEY,\n      data\n    }));\n  }\n\n}\n\nexports.MintNewEditionFromMasterEditionViaToken = MintNewEditionFromMasterEditionViaToken;","map":{"version":3,"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAQA;;AAEA,MAAaA,2CAAb,SAAiEC,iBAAMC,IAAvE,CAA4F;AAA5FC;;AAME,uBAAc,EAAd;AAED;;AAR2F;;AAA5FC;AACkBJ,qDAASA,2CAA2C,CAACK,MAA5C,CAAmD,CAC1E,CAAC,aAAD,EAAgB,IAAhB,CAD0E,EAE1E,CAAC,SAAD,EAAY,KAAZ,CAF0E,CAAnD,CAAT;;AAuBlB,MAAaC,uCAAb,SAA6DL,sBAA7D,CAAwE;AACtEE,cACEI,OADF,EAEEC,MAFF,EAEuD;AAErD,UAAMD,OAAN;AACA,UAAM;AAAEE;AAAF,QAAeF,OAArB;AACA,UAAM;AACJG,aADI;AAEJC,cAFI;AAGJC,qBAHI;AAIJC,mBAJI;AAKJC,oBALI;AAMJC,UANI;AAOJC,mBAPI;AAQJC,mBARI;AASJC,gBATI;AAUJC,kBAVI;AAWJC;AAXI,QAYFZ,MAZJ;AAcA,UAAMa,IAAI,GAAGrB,2CAA2C,CAACsB,SAA5C,CAAsD;AACjEZ,aAAO,EAAEU;AADwD,KAAtD,CAAb;AAIA,SAAKG,GAAL,CACE,IAAIC,gCAAJ,CAA2B;AACzBC,UAAI,EAAE,CACJ;AACEC,cAAM,EAAEf,QADV;AAEEgB,gBAAQ,EAAE,KAFZ;AAGEC,kBAAU,EAAE;AAHd,OADI,EAMJ;AACEF,cAAM,EAAEhB,OADV;AAEEiB,gBAAQ,EAAE,KAFZ;AAGEC,kBAAU,EAAE;AAHd,OANI,EAWJ;AACEF,cAAM,EAAEb,aADV;AAEEc,gBAAQ,EAAE,KAFZ;AAGEC,kBAAU,EAAE;AAHd,OAXI,EAgBJ;AACEF,cAAM,EAAEX,IADV;AAEEY,gBAAQ,EAAE,KAFZ;AAGEC,kBAAU,EAAE;AAHd,OAhBI,EAqBJ;AACEF,cAAM,EAAEV,aADV;AAEEW,gBAAQ,EAAE,KAFZ;AAGEC,kBAAU,EAAE;AAHd,OArBI,EA0BJ;AACEF,cAAM,EAAET,aADV;AAEEU,gBAAQ,EAAE,IAFZ;AAGEC,kBAAU,EAAE;AAHd,OA1BI,EA+BJ;AACEF,cAAM,EAAEjB,QADV;AAEEkB,gBAAQ,EAAE,IAFZ;AAGEC,kBAAU,EAAE;AAHd,OA/BI,EAoCJ;AACEF,cAAM,EAAER,UADV;AAEES,gBAAQ,EAAE,IAFZ;AAGEC,kBAAU,EAAE;AAHd,OApCI,EAyCJ;AACEF,cAAM,EAAEP,YADV;AAEEQ,gBAAQ,EAAE,KAFZ;AAGEC,kBAAU,EAAE;AAHd,OAzCI,EA8CJ;AACEF,cAAM,EAAEd,eADV;AAEEe,gBAAQ,EAAE,KAFZ;AAGEC,kBAAU,EAAE;AAHd,OA9CI,EAmDJ;AACEF,cAAM,EAAEZ,cADV;AAEEa,gBAAQ,EAAE,KAFZ;AAGEC,kBAAU,EAAE;AAHd,OAnDI,EAwDJ;AACEF,cAAM,EAAEG,4BADV;AAEEF,gBAAQ,EAAE,KAFZ;AAGEC,kBAAU,EAAE;AAHd,OAxDI,EA6DJ;AACEF,cAAM,EAAEF,wBAAcM,SADxB;AAEEH,gBAAQ,EAAE,KAFZ;AAGEC,kBAAU,EAAE;AAHd,OA7DI,EAkEJ;AACEF,cAAM,EAAEF,4BADV;AAEEG,gBAAQ,EAAE,KAFZ;AAGEC,kBAAU,EAAE;AAHd,OAlEI,CADmB;AAyEzBE,eAAS,EAAEC,kCAAgBC,MAzEF;AA0EzBX;AA1EyB,KAA3B,CADF;AA8ED;;AAvGqE;;AAAxEjB","names":["MintNewEditionFromMasterEditionViaTokenArgs","mpl_core_1","Data","constructor","exports","struct","MintNewEditionFromMasterEditionViaToken","options","params","feePayer","edition","metadata","updateAuthority","masterEdition","masterMetadata","mint","editionMarker","mintAuthority","tokenOwner","tokenAccount","editionValue","data","serialize","add","web3_js_1","keys","pubkey","isSigner","isWritable","spl_token_1","programId","MetadataProgram_1","PUBKEY"],"sources":["../../../src/transactions/MintNewEditionFromMasterEditionViaToken.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}