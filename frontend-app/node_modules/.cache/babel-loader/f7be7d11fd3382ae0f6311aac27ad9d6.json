{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MSI\\\\Documents\\\\CG\\\\fullstackapp\\\\frontend-app\\\\src\\\\containers\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useEffect, useState } from 'react';\nimport '../components/styles/App.css';\nimport { NavLink } from 'react-router-dom';\nimport SwitchRoute from '../SwitchRoute';\nimport background from '../components/images/daytoner2.jpg';\nimport Navbar from './Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isPhantomInstalled = window.solana && window.solana.isPhantom;\n\nconst App = () => {\n  _s();\n\n  const [walletAddress, setWalletAddress] = useState(null);\n\n  const checkIfWalletIsConnected = async () => {\n    try {\n      const {\n        solana\n      } = window;\n\n      if (solana) {\n        if (solana.isPhantom) {\n          console.log('Phantom wallet found!');\n          const response = await solana.connect({\n            onlyIfTrusted: true\n          });\n          console.log('Connected with Public Key:', response.publicKey.toString());\n          setWalletAddress(response.publicKey.toString());\n        }\n      } else {\n        alert('Solana object not found! Get a Phantom Wallet');\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const connectWallet = async () => {\n    const {\n      solana\n    } = window;\n\n    if (solana) {\n      const response = await solana.connect();\n      console.log('Connected with Public Key:', response.publicKey.toString());\n      setWalletAddress(response.publicKey.toString());\n    }\n  };\n\n  function logout() {\n    setWalletAddress(null);\n    window.solana.request({\n      method: \"disconnect\"\n    });\n    window.solana.on('disconnect', () => console.log(\"disconnected!\"));\n  }\n\n  const renderNotConnectedContainer = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      class: \"connectbtn animated\",\n      onClick: connectWallet,\n      children: \"CONNECT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Connect to Phantom Wallet to log in your account.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 3\n  }, this);\n\n  const renderConnectedUser = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          className: \"userName\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"userDP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 39\n          }, this), \" Username01\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"dropdown\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"settingsli\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              children: \"Change Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 34\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"settingsli\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              children: \"Account Settings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 34\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"settingsli\",\n            onClick: logout,\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#logout\",\n              children: \"Logout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 51\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userCurrency\",\n      children: \"0.00 SOL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userSocial\",\n      children: \"Socials\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"friendlist\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"friendName\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"friendDP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 7\n        }, this), \" ExampleFriend01\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"friendName\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"friendDP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 7\n        }, this), \" ExampleFriend02\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"friendName\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"friendDP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 7\n        }, this), \" ExampleFriend03\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"friendName\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"friendDP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 7\n        }, this), \" ExampleFriend04\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 7\n  }, this);\n\n  useEffect(() => {\n    const onLoad = async () => {\n      await checkIfWalletIsConnected();\n    };\n\n    window.addEventListener('load', onLoad);\n    return () => window.removeEventListener('load', onLoad);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"background\",\n    style: {\n      backgroundImage: `url(${background})`\n    },\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sideBar\",\n      children: [!walletAddress && renderNotConnectedContainer(), walletAddress && renderConnectedUser()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modalbg\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 4\n  }, this);\n};\n\n_s(App, \"FzBUXhdaz8WdQW5Q+ejK8XBThPU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/MSI/Documents/CG/fullstackapp/frontend-app/src/containers/App.js"],"names":["React","Component","useEffect","useState","NavLink","SwitchRoute","background","Navbar","isPhantomInstalled","window","solana","isPhantom","App","walletAddress","setWalletAddress","checkIfWalletIsConnected","console","log","response","connect","onlyIfTrusted","publicKey","toString","alert","error","connectWallet","logout","request","method","on","renderNotConnectedContainer","renderConnectedUser","onLoad","addEventListener","removeEventListener","backgroundImage"],"mappings":"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","sourcesContent":["import React, {Component, useEffect, useState} from 'react';\r\nimport '../components/styles/App.css';\r\nimport {NavLink} from 'react-router-dom';\r\nimport SwitchRoute from '../SwitchRoute';\r\nimport background from '../components/images/daytoner2.jpg';\r\nimport Navbar from './Navbar';\r\n\r\nconst isPhantomInstalled = window.solana && window.solana.isPhantom\r\n\r\nconst App = () => {\r\n\tconst [walletAddress, setWalletAddress] = useState(null);\r\n\tconst checkIfWalletIsConnected = async () => {\r\n\t\ttry {\r\n\t\t\tconst { solana } = window;\r\n\r\n\t\t\tif (solana) {\r\n\t\t\t\tif (solana.isPhantom) {\r\n\t\t\t\t\tconsole.log('Phantom wallet found!');\r\n\t\t\t\t\tconst response = await solana.connect({ onlyIfTrusted: true });\r\n\t\t\t\t\tconsole.log('Connected with Public Key:',response.publicKey.toString());\r\n        \r\n\t\t\t\t\tsetWalletAddress(response.publicKey.toString());\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\talert('Solana object not found! Get a Phantom Wallet');\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error(error);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\tconst connectWallet = async () => {\r\n\t\tconst { solana } = window;\r\n\r\n\t\tif (solana) {\r\n\t\t\tconst response = await solana.connect();\r\n\t\t\tconsole.log('Connected with Public Key:', response.publicKey.toString());\r\n\t\t\tsetWalletAddress(response.publicKey.toString());\r\n\t\t}\r\n\t};\r\n\tfunction logout(){\r\n\t\tsetWalletAddress(null);\r\n\t\twindow.solana.request({ method: \"disconnect\" });\r\n\t\twindow.solana.on('disconnect', () => console.log(\"disconnected!\"));\r\n\t}\r\n\tconst renderNotConnectedContainer = () => (\r\n\t\t<div>\r\n\t\t\t<button class=\"connectbtn animated\" onClick={connectWallet}>CONNECT</button>\r\n\t\t\t<div>Connect to Phantom Wallet to log in your account.</div>\r\n\t\t</div>\r\n\t );\r\n\t const renderConnectedUser = () => (\r\n\t     <div>\r\n\t\t\t<ul>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<a href=\"#\" className=\"userName\"><div className=\"userDP\"></div> Username01</a>\r\n\t\t\t\t\t<ul className=\"dropdown\">\r\n\t\t\t\t\t\t<li className=\"settingsli\"><a href=\"#\">Change Username</a></li>\r\n\t\t\t\t\t\t<li className=\"settingsli\"><a href=\"#\">Account Settings</a></li>\r\n\t\t\t\t\t\t<li className=\"settingsli\" onClick={logout}><a href=\"#logout\">Logout</a></li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t\t<div className=\"userCurrency\">\r\n\t\t\t\t0.00 SOL\r\n\t\t\t</div>\r\n\t\t\t<div className=\"userSocial\">\r\n\t\t\t\tSocials\r\n\t\t\t</div>\r\n\t\t\t\t<ul className=\"friendlist\">\r\n\t\t\t\t\t<li className=\"friendName\">\r\n\t\t\t\t\t\t<div className=\"friendDP\"></div> ExampleFriend01\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className=\"friendName\">\r\n\t\t\t\t\t\t<div className=\"friendDP\"></div> ExampleFriend02\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className=\"friendName\">\r\n\t\t\t\t\t\t<div className=\"friendDP\"></div> ExampleFriend03\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className=\"friendName\">\r\n\t\t\t\t\t\t<div className=\"friendDP\"></div> ExampleFriend04\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t </div>\r\n\t );\r\n\r\n\tuseEffect(() => {\r\n\t\tconst onLoad = async () => {\r\n\t\t\t  await checkIfWalletIsConnected();\r\n\t\t};\r\n\t\twindow.addEventListener('load', onLoad);\r\n\t\treturn () => window.removeEventListener('load', onLoad);\r\n\t}, []);\r\n\t\treturn (\r\n\t\t\t<div className=\"background\" style={{ backgroundImage: `url(${background})` }}>\r\n\t\t\t\t<Navbar />\r\n\t\t\t\t<div className=\"sideBar\">\r\n\t\t\t\t\t{!walletAddress && renderNotConnectedContainer()}\r\n\t\t\t\t\t{walletAddress && renderConnectedUser()}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"modalbg\">\r\n\t\t\t\t\t<div className=\"modal\"></div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}