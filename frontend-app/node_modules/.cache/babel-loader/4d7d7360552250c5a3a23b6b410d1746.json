{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nvar _a;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Store = exports.StoreData = void 0;\n\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\n\nconst MetaplexProgram_1 = require(\"../MetaplexProgram\");\n\nconst web3_js_1 = require(\"@solana/web3.js\");\n\nconst bs58_1 = __importDefault(require(\"bs58\"));\n\nconst WhitelistedCreator_1 = require(\"./WhitelistedCreator\");\n\nconst AuctionManager_1 = require(\"./AuctionManager\");\n\nconst buffer_1 = require(\"buffer\");\n\nclass StoreData extends mpl_core_1.Borsh.Data {\n  constructor(args) {\n    super(args);\n    this.key = MetaplexProgram_1.MetaplexKey.StoreV1;\n    this.public = true;\n    this.key = MetaplexProgram_1.MetaplexKey.StoreV1;\n  }\n\n}\n\nexports.StoreData = StoreData;\n_a = StoreData;\nStoreData.SCHEMA = _a.struct([['key', 'u8'], ['public', 'u8'], ['auctionProgram', 'pubkeyAsString'], ['tokenVaultProgram', 'pubkeyAsString'], ['tokenMetadataProgram', 'pubkeyAsString'], ['tokenProgram', 'pubkeyAsString']]);\n\nclass Store extends mpl_core_1.Account {\n  constructor(pubkey, info) {\n    super(pubkey, info);\n\n    if (!this.assertOwner(MetaplexProgram_1.MetaplexProgram.PUBKEY)) {\n      throw (0, mpl_core_1.ERROR_INVALID_OWNER)();\n    }\n\n    if (!Store.isCompatible(this.info.data)) {\n      throw (0, mpl_core_1.ERROR_INVALID_ACCOUNT_DATA)();\n    }\n\n    this.data = StoreData.deserialize(this.info.data);\n  }\n\n  static isCompatible(data) {\n    return data[0] === MetaplexProgram_1.MetaplexKey.StoreV1;\n  }\n\n  static getPDA(owner) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return MetaplexProgram_1.MetaplexProgram.findProgramAddress([buffer_1.Buffer.from(MetaplexProgram_1.MetaplexProgram.PREFIX), MetaplexProgram_1.MetaplexProgram.PUBKEY.toBuffer(), new web3_js_1.PublicKey(owner).toBuffer()]);\n    });\n  }\n\n  getWhitelistedCreators(connection) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return (yield MetaplexProgram_1.MetaplexProgram.getProgramAccounts(connection, {\n        filters: [{\n          memcmp: {\n            offset: 0,\n            bytes: bs58_1.default.encode(buffer_1.Buffer.from([MetaplexProgram_1.MetaplexKey.WhitelistedCreatorV1]))\n          }\n        }]\n      })).map(account => WhitelistedCreator_1.WhitelistedCreator.from(account));\n    });\n  }\n\n  getAuctionManagers(connection) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return (yield MetaplexProgram_1.MetaplexProgram.getProgramAccounts(connection, {\n        filters: [{\n          memcmp: {\n            offset: 0,\n            bytes: bs58_1.default.encode(buffer_1.Buffer.from([MetaplexProgram_1.MetaplexKey.AuctionManagerV2]))\n          }\n        }, {\n          memcmp: {\n            offset: 1,\n            bytes: this.pubkey.toBase58()\n          }\n        }]\n      })).map(account => AuctionManager_1.AuctionManager.from(account));\n    });\n  }\n\n}\n\nexports.Store = Store;","map":{"version":3,"mappings":"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","names":["StoreData","mpl_core_1","Data","constructor","args","MetaplexProgram_1","StoreV1","key","exports","_a","struct","Store","pubkey","info","assertOwner","PUBKEY","isCompatible","data","deserialize","getPDA","owner","findProgramAddress","buffer_1","from","PREFIX","toBuffer","web3_js_1","getWhitelistedCreators","connection","getProgramAccounts","filters","memcmp","offset","bytes","bs58_1","encode","WhitelistedCreatorV1","map","account","WhitelistedCreator_1","getAuctionManagers","AuctionManagerV2","toBase58","AuctionManager_1"],"sources":["../../../src/accounts/Store.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}