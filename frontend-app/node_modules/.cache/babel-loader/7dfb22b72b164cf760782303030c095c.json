{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deserialize = exports.TokenAccount = void 0;\n\nconst errors_1 = require(\"../errors\");\n\nconst Account_1 = require(\"./Account\");\n\nconst spl_token_1 = require(\"@solana/spl-token\");\n\nconst web3_js_1 = require(\"@solana/web3.js\");\n\nclass TokenAccount extends Account_1.Account {\n  constructor(pubkey, info) {\n    super(pubkey, info);\n\n    if (!this.assertOwner(spl_token_1.TOKEN_PROGRAM_ID)) {\n      throw (0, errors_1.ERROR_INVALID_OWNER)();\n    }\n\n    if (!TokenAccount.isCompatible(this.info.data)) {\n      throw (0, errors_1.ERROR_INVALID_ACCOUNT_DATA)();\n    }\n\n    this.data = (0, exports.deserialize)(this.info.data);\n  }\n\n  static isCompatible(data) {\n    return data.length === spl_token_1.AccountLayout.span;\n  }\n\n  static getTokenAccountsByOwner(connection, owner) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return (yield connection.getTokenAccountsByOwner(new web3_js_1.PublicKey(owner), {\n        programId: spl_token_1.TOKEN_PROGRAM_ID\n      })).value.map(_ref => {\n        let {\n          pubkey,\n          account\n        } = _ref;\n        return new TokenAccount(pubkey, account);\n      });\n    });\n  }\n\n}\n\nexports.TokenAccount = TokenAccount;\n\nconst deserialize = data => {\n  const accountInfo = spl_token_1.AccountLayout.decode(data);\n  accountInfo.mint = new web3_js_1.PublicKey(accountInfo.mint);\n  accountInfo.owner = new web3_js_1.PublicKey(accountInfo.owner);\n  accountInfo.amount = spl_token_1.u64.fromBuffer(accountInfo.amount);\n\n  if (accountInfo.delegateOption === 0) {\n    accountInfo.delegate = null;\n    accountInfo.delegatedAmount = new spl_token_1.u64(0);\n  } else {\n    accountInfo.delegate = new web3_js_1.PublicKey(accountInfo.delegate);\n    accountInfo.delegatedAmount = spl_token_1.u64.fromBuffer(accountInfo.delegatedAmount);\n  }\n\n  accountInfo.isInitialized = accountInfo.state !== 0;\n  accountInfo.isFrozen = accountInfo.state === 2;\n\n  if (accountInfo.isNativeOption === 1) {\n    accountInfo.rentExemptReserve = spl_token_1.u64.fromBuffer(accountInfo.isNative);\n    accountInfo.isNative = true;\n  } else {\n    accountInfo.rentExemptReserve = null;\n    accountInfo.isNative = false;\n  }\n\n  if (accountInfo.closeAuthorityOption === 0) {\n    accountInfo.closeAuthority = null;\n  } else {\n    accountInfo.closeAuthority = new web3_js_1.PublicKey(accountInfo.closeAuthority);\n  }\n\n  return accountInfo;\n};\n\nexports.deserialize = deserialize;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;AACA;;AAMA;;AAGA,MAAaA,YAAb,SAAkCC,iBAAlC,CAA2D;AACzDC,cAAYC,MAAZ,EAAkCC,IAAlC,EAA2D;AACzD,UAAMD,MAAN,EAAcC,IAAd;;AAEA,QAAI,CAAC,KAAKC,WAAL,CAAiBC,4BAAjB,CAAL,EAAyC;AACvC,YAAM,mCAAN;AACD;;AAED,QAAI,CAACN,YAAY,CAACO,YAAb,CAA0B,KAAKH,IAAL,CAAUI,IAApC,CAAL,EAAgD;AAC9C,YAAM,0CAAN;AACD;;AAED,SAAKA,IAAL,GAAY,yBAAY,KAAKJ,IAAL,CAAUI,IAAtB,CAAZ;AACD;;AAEkB,SAAZD,YAAY,CAACC,IAAD,EAAa;AAC9B,WAAOA,IAAI,CAACC,MAAL,KAAgBH,0BAAcI,IAArC;AACD;;AAEmC,SAAvBC,uBAAuB,CAACC,UAAD,EAAyBC,KAAzB,EAA4C;;AAC9E,aAAO,CACL,MAAMD,UAAU,CAACD,uBAAX,CAAmC,IAAIG,mBAAJ,CAAcD,KAAd,CAAnC,EAAyD;AAC7DE,iBAAS,EAAET;AADkD,OAAzD,CADD,EAILU,KAJK,CAICC,GAJD,CAIK;AAAA,YAAC;AAAEd,gBAAF;AAAUe;AAAV,SAAD;AAAA,eAAyB,IAAIlB,YAAJ,CAAiBG,MAAjB,EAAyBe,OAAzB,CAAzB;AAAA,OAJL,CAAP;AAKD;AAAA;;AAzBwD;;AAA3DC;;AA4BO,MAAMC,WAAW,GAAIZ,IAAD,IAAiB;AAC1C,QAAMa,WAAW,GAAGf,0BAAcgB,MAAd,CAAqBd,IAArB,CAApB;AACAa,aAAW,CAACE,IAAZ,GAAmB,IAAIT,mBAAJ,CAAcO,WAAW,CAACE,IAA1B,CAAnB;AACAF,aAAW,CAACR,KAAZ,GAAoB,IAAIC,mBAAJ,CAAcO,WAAW,CAACR,KAA1B,CAApB;AACAQ,aAAW,CAACG,MAAZ,GAAqBlB,gBAAImB,UAAJ,CAAeJ,WAAW,CAACG,MAA3B,CAArB;;AAEA,MAAIH,WAAW,CAACK,cAAZ,KAA+B,CAAnC,EAAsC;AACpCL,eAAW,CAACM,QAAZ,GAAuB,IAAvB;AACAN,eAAW,CAACO,eAAZ,GAA8B,IAAItB,eAAJ,CAAQ,CAAR,CAA9B;AACD,GAHD,MAGO;AACLe,eAAW,CAACM,QAAZ,GAAuB,IAAIb,mBAAJ,CAAcO,WAAW,CAACM,QAA1B,CAAvB;AACAN,eAAW,CAACO,eAAZ,GAA8BtB,gBAAImB,UAAJ,CAAeJ,WAAW,CAACO,eAA3B,CAA9B;AACD;;AAEDP,aAAW,CAACQ,aAAZ,GAA4BR,WAAW,CAACS,KAAZ,KAAsB,CAAlD;AACAT,aAAW,CAACU,QAAZ,GAAuBV,WAAW,CAACS,KAAZ,KAAsB,CAA7C;;AAEA,MAAIT,WAAW,CAACW,cAAZ,KAA+B,CAAnC,EAAsC;AACpCX,eAAW,CAACY,iBAAZ,GAAgC3B,gBAAImB,UAAJ,CAAeJ,WAAW,CAACa,QAA3B,CAAhC;AACAb,eAAW,CAACa,QAAZ,GAAuB,IAAvB;AACD,GAHD,MAGO;AACLb,eAAW,CAACY,iBAAZ,GAAgC,IAAhC;AACAZ,eAAW,CAACa,QAAZ,GAAuB,KAAvB;AACD;;AAED,MAAIb,WAAW,CAACc,oBAAZ,KAAqC,CAAzC,EAA4C;AAC1Cd,eAAW,CAACe,cAAZ,GAA6B,IAA7B;AACD,GAFD,MAEO;AACLf,eAAW,CAACe,cAAZ,GAA6B,IAAItB,mBAAJ,CAAcO,WAAW,CAACe,cAA1B,CAA7B;AACD;;AAED,SAAOf,WAAP;AACD,CAhCM;;AAAMF,sBAAWC,WAAX","names":["TokenAccount","Account_1","constructor","pubkey","info","assertOwner","spl_token_1","isCompatible","data","length","span","getTokenAccountsByOwner","connection","owner","web3_js_1","programId","value","map","account","exports","deserialize","accountInfo","decode","mint","amount","fromBuffer","delegateOption","delegate","delegatedAmount","isInitialized","state","isFrozen","isNativeOption","rentExemptReserve","isNative","closeAuthorityOption","closeAuthority"],"sources":["../../../src/accounts/TokenAccount.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}