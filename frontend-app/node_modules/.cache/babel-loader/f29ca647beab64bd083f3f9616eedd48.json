{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BidderMetadata = exports.BidderMetadataData = void 0;\n\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\n\nconst web3_js_1 = require(\"@solana/web3.js\");\n\nconst AuctionProgram_1 = require(\"../AuctionProgram\");\n\nconst buffer_1 = require(\"buffer\");\n\nclass BidderMetadataData extends mpl_core_1.Borsh.Data {}\n\nexports.BidderMetadataData = BidderMetadataData;\nBidderMetadataData.SCHEMA = BidderMetadataData.struct([['bidderPubkey', 'pubkeyAsString'], ['auctionPubkey', 'pubkeyAsString'], ['lastBid', 'u64'], ['lastBidTimestamp', 'u64'], ['cancelled', 'u8']]);\n\nclass BidderMetadata extends mpl_core_1.Account {\n  constructor(key, info) {\n    super(key, info);\n\n    if (!this.assertOwner(AuctionProgram_1.AuctionProgram.PUBKEY)) {\n      throw (0, mpl_core_1.ERROR_INVALID_OWNER)();\n    }\n\n    if (!BidderMetadata.isCompatible(this.info.data)) {\n      throw (0, mpl_core_1.ERROR_INVALID_ACCOUNT_DATA)();\n    }\n\n    this.data = BidderMetadataData.deserialize(this.info.data);\n  }\n\n  static isCompatible(data) {\n    return data.length === BidderMetadata.DATA_SIZE;\n  }\n\n  static getPDA(auction, bidder) {\n    return AuctionProgram_1.AuctionProgram.findProgramAddress([buffer_1.Buffer.from(AuctionProgram_1.AuctionProgram.PREFIX), AuctionProgram_1.AuctionProgram.PUBKEY.toBuffer(), new web3_js_1.PublicKey(auction).toBuffer(), new web3_js_1.PublicKey(bidder).toBuffer(), buffer_1.Buffer.from('metadata')]);\n  }\n\n}\n\nexports.BidderMetadata = BidderMetadata;\nBidderMetadata.DATA_SIZE = 32 + 32 + 8 + 8 + 1;","map":{"version":3,"mappings":";;;;;;;AAAA;;AAQA;;AAEA;;AACA;;AASA,MAAaA,kBAAb,SAAwCC,iBAAMC,IAA9C,CAAwD;;AAAxDC;AACkBH,4BAASA,kBAAkB,CAACI,MAAnB,CAA0B,CACjD,CAAC,cAAD,EAAiB,gBAAjB,CADiD,EAEjD,CAAC,eAAD,EAAkB,gBAAlB,CAFiD,EAGjD,CAAC,SAAD,EAAY,KAAZ,CAHiD,EAIjD,CAAC,kBAAD,EAAqB,KAArB,CAJiD,EAKjD,CAAC,WAAD,EAAc,IAAd,CALiD,CAA1B,CAAT;;AAqBlB,MAAaC,cAAb,SAAoCJ,kBAApC,CAA+D;AAG7DK,cAAYC,GAAZ,EAA+BC,IAA/B,EAAwD;AACtD,UAAMD,GAAN,EAAWC,IAAX;;AAEA,QAAI,CAAC,KAAKC,WAAL,CAAiBC,gCAAeC,MAAhC,CAAL,EAA8C;AAC5C,YAAM,qCAAN;AACD;;AAED,QAAI,CAACN,cAAc,CAACO,YAAf,CAA4B,KAAKJ,IAAL,CAAUK,IAAtC,CAAL,EAAkD;AAChD,YAAM,4CAAN;AACD;;AAED,SAAKA,IAAL,GAAYb,kBAAkB,CAACc,WAAnB,CAA+B,KAAKN,IAAL,CAAUK,IAAzC,CAAZ;AACD;;AAEkB,SAAZD,YAAY,CAACC,IAAD,EAAa;AAC9B,WAAOA,IAAI,CAACE,MAAL,KAAgBV,cAAc,CAACW,SAAtC;AACD;;AAEY,SAANC,MAAM,CAACC,OAAD,EAAwBC,MAAxB,EAA4C;AACvD,WAAOT,gCAAeU,kBAAf,CAAkC,CACvCC,gBAAOC,IAAP,CAAYZ,gCAAea,MAA3B,CADuC,EAEvCb,gCAAeC,MAAf,CAAsBa,QAAtB,EAFuC,EAGvC,IAAIC,mBAAJ,CAAcP,OAAd,EAAuBM,QAAvB,EAHuC,EAIvC,IAAIC,mBAAJ,CAAcN,MAAd,EAAsBK,QAAtB,EAJuC,EAKvCH,gBAAOC,IAAP,CAAY,UAAZ,CALuC,CAAlC,CAAP;AAOD;;AA7B4D;;AAA/DnB;AACkBE,2BAAY,KAAK,EAAL,GAAU,CAAV,GAAc,CAAd,GAAkB,CAA9B","names":["BidderMetadataData","mpl_core_1","Data","exports","struct","BidderMetadata","constructor","key","info","assertOwner","AuctionProgram_1","PUBKEY","isCompatible","data","deserialize","length","DATA_SIZE","getPDA","auction","bidder","findProgramAddress","buffer_1","from","PREFIX","toBuffer","web3_js_1"],"sources":["../../../src/accounts/BidderMetadata.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}