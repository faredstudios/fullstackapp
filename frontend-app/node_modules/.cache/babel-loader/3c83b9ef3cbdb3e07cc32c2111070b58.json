{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Utilize = exports.UtilizeArgs = void 0;\n\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\n\nconst spl_token_1 = require(\"@solana/spl-token\");\n\nconst web3_js_1 = require(\"@solana/web3.js\");\n\nconst MetadataProgram_1 = require(\"../MetadataProgram\");\n\nclass UtilizeArgs extends mpl_core_1.Borsh.Data {\n  constructor() {\n    super(...arguments);\n    this.instruction = 19;\n  }\n\n}\n\nexports.UtilizeArgs = UtilizeArgs;\nUtilizeArgs.SCHEMA = new Map([...UtilizeArgs.struct([['instruction', 'u8'], ['numberOfUses', 'u8']])]);\n\nclass Utilize extends mpl_core_1.Transaction {\n  constructor(options, params) {\n    super(options);\n    const {\n      metadata,\n      useAuthority,\n      numberOfUses,\n      burner,\n      tokenAccount\n    } = params;\n    const data = UtilizeArgs.serialize({\n      numberOfUses\n    });\n    const accounts = [{\n      pubkey: metadata,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: tokenAccount,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: useAuthority,\n      isSigner: true,\n      isWritable: false\n    }, {\n      pubkey: spl_token_1.TOKEN_PROGRAM_ID,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: web3_js_1.SystemProgram.programId,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: web3_js_1.SYSVAR_RENT_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }];\n\n    if (useAuthority) {\n      accounts.push({\n        pubkey: useAuthority,\n        isSigner: false,\n        isWritable: false\n      });\n      accounts.push({\n        pubkey: burner,\n        isSigner: false,\n        isWritable: false\n      });\n    }\n\n    this.add(new web3_js_1.TransactionInstruction({\n      keys: accounts,\n      programId: MetadataProgram_1.MetadataProgram.PUBKEY,\n      data\n    }));\n  }\n\n}\n\nexports.Utilize = Utilize;","map":{"version":3,"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAOA;;AAEA,MAAaA,WAAb,SAAiCC,iBAAMC,IAAvC,CAA2C;AAA3CC;;AAOE,uBAAc,EAAd;AAED;;AAT0C;;AAA3CC;AACkBJ,qBAAS,IAAIK,GAAJ,CAAQ,CAC/B,GAAGL,WAAW,CAACM,MAAZ,CAAmB,CACpB,CAAC,aAAD,EAAgB,IAAhB,CADoB,EAEpB,CAAC,cAAD,EAAiB,IAAjB,CAFoB,CAAnB,CAD4B,CAAR,CAAT;;AAoBlB,MAAaC,OAAb,SAA6BN,sBAA7B,CAAwC;AACtCE,cAAYK,OAAZ,EAA4CC,MAA5C,EAAiE;AAC/D,UAAMD,OAAN;AACA,UAAM;AAAEE,cAAF;AAAYC,kBAAZ;AAA0BC,kBAA1B;AAAwCC,YAAxC;AAAgDC;AAAhD,QAAiEL,MAAvE;AAEA,UAAMM,IAAI,GAAGf,WAAW,CAACgB,SAAZ,CAAsB;AAAEJ;AAAF,KAAtB,CAAb;AACA,UAAMK,QAAQ,GAAG,CACf;AACEC,YAAM,EAAER,QADV;AAEES,cAAQ,EAAE,KAFZ;AAGEC,gBAAU,EAAE;AAHd,KADe,EAMf;AACEF,YAAM,EAAEJ,YADV;AAEEK,cAAQ,EAAE,KAFZ;AAGEC,gBAAU,EAAE;AAHd,KANe,EAWf;AACEF,YAAM,EAAEP,YADV;AAEEQ,cAAQ,EAAE,IAFZ;AAGEC,gBAAU,EAAE;AAHd,KAXe,EAgBf;AACEF,YAAM,EAAEG,4BADV;AAEEF,cAAQ,EAAE,KAFZ;AAGEC,gBAAU,EAAE;AAHd,KAhBe,EAqBf;AACEF,YAAM,EAAEI,wBAAcC,SADxB;AAEEJ,cAAQ,EAAE,KAFZ;AAGEC,gBAAU,EAAE;AAHd,KArBe,EA0Bf;AACEF,YAAM,EAAEI,4BADV;AAEEH,cAAQ,EAAE,KAFZ;AAGEC,gBAAU,EAAE;AAHd,KA1Be,CAAjB;;AAgCA,QAAIT,YAAJ,EAAkB;AAChBM,cAAQ,CAACO,IAAT,CAAc;AACZN,cAAM,EAAEP,YADI;AAEZQ,gBAAQ,EAAE,KAFE;AAGZC,kBAAU,EAAE;AAHA,OAAd;AAKAH,cAAQ,CAACO,IAAT,CAAc;AACZN,cAAM,EAAEL,MADI;AAEZM,gBAAQ,EAAE,KAFE;AAGZC,kBAAU,EAAE;AAHA,OAAd;AAKD;;AACD,SAAKK,GAAL,CACE,IAAIH,gCAAJ,CAA2B;AACzBI,UAAI,EAAET,QADmB;AAEzBM,eAAS,EAAEI,kCAAgBC,MAFF;AAGzBb;AAHyB,KAA3B,CADF;AAOD;;AAzDqC;;AAAxCX","names":["UtilizeArgs","mpl_core_1","Data","constructor","exports","Map","struct","Utilize","options","params","metadata","useAuthority","numberOfUses","burner","tokenAccount","data","serialize","accounts","pubkey","isSigner","isWritable","spl_token_1","web3_js_1","programId","push","add","keys","MetadataProgram_1","PUBKEY"],"sources":["../../../src/transactions/Utilize.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}