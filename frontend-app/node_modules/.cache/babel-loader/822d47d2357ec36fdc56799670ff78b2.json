{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BidderPot = exports.BidderPotData = void 0;\n\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\n\nconst AuctionProgram_1 = require(\"../AuctionProgram\");\n\nconst web3_js_1 = require(\"@solana/web3.js\");\n\nconst buffer_1 = require(\"buffer\");\n\nclass BidderPotData extends mpl_core_1.Borsh.Data {}\n\nexports.BidderPotData = BidderPotData;\nBidderPotData.SCHEMA = BidderPotData.struct([['bidderPot', 'pubkeyAsString'], ['bidderAct', 'pubkeyAsString'], ['auctionAct', 'pubkeyAsString'], ['emptied', 'u8']]);\n\nclass BidderPot extends mpl_core_1.Account {\n  constructor(key, info) {\n    super(key, info);\n\n    if (!this.assertOwner(AuctionProgram_1.AuctionProgram.PUBKEY)) {\n      throw (0, mpl_core_1.ERROR_INVALID_OWNER)();\n    }\n\n    if (!BidderPot.isCompatible(this.info.data)) {\n      throw (0, mpl_core_1.ERROR_INVALID_ACCOUNT_DATA)();\n    }\n\n    this.data = BidderPotData.deserialize(this.info.data);\n  }\n\n  static isCompatible(data) {\n    return data.length === BidderPot.DATA_SIZE;\n  }\n\n  static getPDA(auction, bidder) {\n    return AuctionProgram_1.AuctionProgram.findProgramAddress([buffer_1.Buffer.from(AuctionProgram_1.AuctionProgram.PREFIX), AuctionProgram_1.AuctionProgram.PUBKEY.toBuffer(), new web3_js_1.PublicKey(auction).toBuffer(), new web3_js_1.PublicKey(bidder).toBuffer()]);\n  }\n\n}\n\nexports.BidderPot = BidderPot;\nBidderPot.DATA_SIZE = 32 + 32 + 32 + 1;","map":{"version":3,"mappings":";;;;;;;AAAA;;AAQA;;AACA;;AACA;;AAQA,MAAaA,aAAb,SAAmCC,iBAAMC,IAAzC,CAAmD;;AAAnDC;AACkBH,uBAASA,aAAa,CAACI,MAAd,CAAqB,CAC5C,CAAC,WAAD,EAAc,gBAAd,CAD4C,EAE5C,CAAC,WAAD,EAAc,gBAAd,CAF4C,EAG5C,CAAC,YAAD,EAAe,gBAAf,CAH4C,EAI5C,CAAC,SAAD,EAAY,IAAZ,CAJ4C,CAArB,CAAT;;AAiBlB,MAAaC,SAAb,SAA+BJ,kBAA/B,CAAqD;AAGnDK,cAAYC,GAAZ,EAA+BC,IAA/B,EAAwD;AACtD,UAAMD,GAAN,EAAWC,IAAX;;AAEA,QAAI,CAAC,KAAKC,WAAL,CAAiBC,gCAAeC,MAAhC,CAAL,EAA8C;AAC5C,YAAM,qCAAN;AACD;;AAED,QAAI,CAACN,SAAS,CAACO,YAAV,CAAuB,KAAKJ,IAAL,CAAUK,IAAjC,CAAL,EAA6C;AAC3C,YAAM,4CAAN;AACD;;AAED,SAAKA,IAAL,GAAYb,aAAa,CAACc,WAAd,CAA0B,KAAKN,IAAL,CAAUK,IAApC,CAAZ;AACD;;AAEkB,SAAZD,YAAY,CAACC,IAAD,EAAa;AAC9B,WAAOA,IAAI,CAACE,MAAL,KAAgBV,SAAS,CAACW,SAAjC;AACD;;AAEY,SAANC,MAAM,CAACC,OAAD,EAAwBC,MAAxB,EAA4C;AACvD,WAAOT,gCAAeU,kBAAf,CAAkC,CACvCC,gBAAOC,IAAP,CAAYZ,gCAAea,MAA3B,CADuC,EAEvCb,gCAAeC,MAAf,CAAsBa,QAAtB,EAFuC,EAGvC,IAAIC,mBAAJ,CAAcP,OAAd,EAAuBM,QAAvB,EAHuC,EAIvC,IAAIC,mBAAJ,CAAcN,MAAd,EAAsBK,QAAtB,EAJuC,CAAlC,CAAP;AAMD;;AA5BkD;;AAArDrB;AACkBE,sBAAY,KAAK,EAAL,GAAU,EAAV,GAAe,CAA3B","names":["BidderPotData","mpl_core_1","Data","exports","struct","BidderPot","constructor","key","info","assertOwner","AuctionProgram_1","PUBKEY","isCompatible","data","deserialize","length","DATA_SIZE","getPDA","auction","bidder","findProgramAddress","buffer_1","from","PREFIX","toBuffer","web3_js_1"],"sources":["../../../src/accounts/BidderPot.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}