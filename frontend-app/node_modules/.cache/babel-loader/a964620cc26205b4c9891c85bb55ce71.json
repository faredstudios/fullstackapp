{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RevokeCollectionAuthority = exports.RevokeCollectionAuthorityArgs = void 0;\n\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\n\nconst web3_js_1 = require(\"@solana/web3.js\");\n\nconst MetadataProgram_1 = require(\"../MetadataProgram\");\n\nclass RevokeCollectionAuthorityArgs extends mpl_core_1.Borsh.Data {\n  constructor() {\n    super(...arguments);\n    this.instruction = 24;\n  }\n\n}\n\nexports.RevokeCollectionAuthorityArgs = RevokeCollectionAuthorityArgs;\nRevokeCollectionAuthorityArgs.SCHEMA = new Map([...RevokeCollectionAuthorityArgs.struct([['instruction', 'u8']])]);\n\nclass RevokeCollectionAuthority extends mpl_core_1.Transaction {\n  constructor(options, params) {\n    super(options);\n    const {\n      metadata,\n      collectionAuthorityRecord,\n      delegateAuthority,\n      newCollectionAuthority,\n      updateAuthority,\n      mint\n    } = params;\n    const delegatedAuth = delegateAuthority || newCollectionAuthority;\n\n    if (!delegatedAuth) {\n      throw new Error('Must provide either a delegateAuthority');\n    }\n\n    const data = RevokeCollectionAuthorityArgs.serialize();\n    const accounts = [{\n      pubkey: collectionAuthorityRecord,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: delegatedAuth,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: updateAuthority,\n      isSigner: true,\n      isWritable: false\n    }, {\n      pubkey: metadata,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: mint,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: web3_js_1.SystemProgram.programId,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: web3_js_1.SYSVAR_RENT_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }];\n    this.add(new web3_js_1.TransactionInstruction({\n      keys: accounts,\n      programId: MetadataProgram_1.MetadataProgram.PUBKEY,\n      data\n    }));\n  }\n\n}\n\nexports.RevokeCollectionAuthority = RevokeCollectionAuthority;","map":{"version":3,"mappings":";;;;;;;AAAA;;AACA;;AAOA;;AAEA,MAAaA,6BAAb,SAAmDC,iBAAMC,IAAzD,CAA6D;AAA7DC;;AAIE,uBAAc,EAAd;AACD;;AAL4D;;AAA7DC;AACkBJ,uCAAS,IAAIK,GAAJ,CAAQ,CAC/B,GAAGL,6BAA6B,CAACM,MAA9B,CAAqC,CAAC,CAAC,aAAD,EAAgB,IAAhB,CAAD,CAArC,CAD4B,CAAR,CAAT;;AAgBlB,MAAaC,yBAAb,SAA+CN,sBAA/C,CAA0D;AACxDE,cAAYK,OAAZ,EAA4CC,MAA5C,EAAmF;AACjF,UAAMD,OAAN;AACA,UAAM;AACJE,cADI;AAEJC,+BAFI;AAGJC,uBAHI;AAIJC,4BAJI;AAKJC,qBALI;AAMJC;AANI,QAOFN,MAPJ;AAQA,UAAMO,aAAa,GAAGJ,iBAAiB,IAAIC,sBAA3C;;AACA,QAAI,CAACG,aAAL,EAAoB;AAClB,YAAM,IAAIC,KAAJ,CAAU,yCAAV,CAAN;AACD;;AACD,UAAMC,IAAI,GAAGlB,6BAA6B,CAACmB,SAA9B,EAAb;AACA,UAAMC,QAAQ,GAAG,CACf;AACEC,YAAM,EAAEV,yBADV;AAEEW,cAAQ,EAAE,KAFZ;AAGEC,gBAAU,EAAE;AAHd,KADe,EAMf;AACEF,YAAM,EAAEL,aADV;AAEEM,cAAQ,EAAE,KAFZ;AAGEC,gBAAU,EAAE;AAHd,KANe,EAWf;AACEF,YAAM,EAAEP,eADV;AAEEQ,cAAQ,EAAE,IAFZ;AAGEC,gBAAU,EAAE;AAHd,KAXe,EAgBf;AACEF,YAAM,EAAEX,QADV;AAEEY,cAAQ,EAAE,KAFZ;AAGEC,gBAAU,EAAE;AAHd,KAhBe,EAqBf;AACEF,YAAM,EAAEN,IADV;AAEEO,cAAQ,EAAE,KAFZ;AAGEC,gBAAU,EAAE;AAHd,KArBe,EA0Bf;AACEF,YAAM,EAAEG,wBAAcC,SADxB;AAEEH,cAAQ,EAAE,KAFZ;AAGEC,gBAAU,EAAE;AAHd,KA1Be,EA+Bf;AACEF,YAAM,EAAEG,4BADV;AAEEF,cAAQ,EAAE,KAFZ;AAGEC,gBAAU,EAAE;AAHd,KA/Be,CAAjB;AAsCA,SAAKG,GAAL,CACE,IAAIF,gCAAJ,CAA2B;AACzBG,UAAI,EAAEP,QADmB;AAEzBK,eAAS,EAAEG,kCAAgBC,MAFF;AAGzBX;AAHyB,KAA3B,CADF;AAOD;;AA7DuD;;AAA1Dd","names":["RevokeCollectionAuthorityArgs","mpl_core_1","Data","constructor","exports","Map","struct","RevokeCollectionAuthority","options","params","metadata","collectionAuthorityRecord","delegateAuthority","newCollectionAuthority","updateAuthority","mint","delegatedAuth","Error","data","serialize","accounts","pubkey","isSigner","isWritable","web3_js_1","programId","add","keys","MetadataProgram_1","PUBKEY"],"sources":["../../../src/transactions/RevokeCollectionAuthority.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}