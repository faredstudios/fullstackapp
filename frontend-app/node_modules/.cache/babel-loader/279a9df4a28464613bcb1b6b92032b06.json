{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AuctionExtended = exports.AuctionDataExtended = void 0;\n\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\n\nconst AuctionProgram_1 = require(\"../AuctionProgram\");\n\nconst buffer_1 = require(\"buffer\");\n\nconst web3_js_1 = require(\"@solana/web3.js\");\n\nclass AuctionDataExtended extends mpl_core_1.Borsh.Data {}\n\nexports.AuctionDataExtended = AuctionDataExtended;\nAuctionDataExtended.SCHEMA = AuctionDataExtended.struct([['totalUncancelledBids', 'u64'], ['tickSize', {\n  kind: 'option',\n  type: 'u64'\n}], ['gapTickSizePercentage', {\n  kind: 'option',\n  type: 'u8'\n}], ['instantSalePrice', {\n  kind: 'option',\n  type: 'u64'\n}], ['name', {\n  kind: 'option',\n  type: [32]\n}]]);\n\nclass AuctionExtended extends mpl_core_1.Account {\n  constructor(pubkey, info) {\n    super(pubkey, info);\n\n    if (!this.assertOwner(AuctionProgram_1.AuctionProgram.PUBKEY)) {\n      throw (0, mpl_core_1.ERROR_INVALID_OWNER)();\n    }\n\n    if (!AuctionExtended.isCompatible(this.info.data)) {\n      throw (0, mpl_core_1.ERROR_INVALID_ACCOUNT_DATA)();\n    }\n\n    this.data = AuctionDataExtended.deserialize(this.info.data);\n  }\n\n  static isCompatible(data) {\n    return data.length === AuctionExtended.DATA_SIZE;\n  }\n\n  static getPDA(vault) {\n    return AuctionProgram_1.AuctionProgram.findProgramAddress([buffer_1.Buffer.from(AuctionProgram_1.AuctionProgram.PREFIX), AuctionProgram_1.AuctionProgram.PUBKEY.toBuffer(), new web3_js_1.PublicKey(vault).toBuffer(), buffer_1.Buffer.from(AuctionProgram_1.AuctionProgram.EXTENDED)]);\n  }\n\n}\n\nexports.AuctionExtended = AuctionExtended;\nAuctionExtended.DATA_SIZE = 8 + 9 + 2 + 200;","map":{"version":3,"mappings":";;;;;;;AAAA;;AAQA;;AACA;;AACA;;AASA,MAAaA,mBAAb,SAAyCC,iBAAMC,IAA/C,CAAyD;;AAAzDC;AACkBH,6BAASA,mBAAmB,CAACI,MAApB,CAA2B,CAClD,CAAC,sBAAD,EAAyB,KAAzB,CADkD,EAElD,CAAC,UAAD,EAAa;AAAEC,MAAI,EAAE,QAAR;AAAkBC,MAAI,EAAE;AAAxB,CAAb,CAFkD,EAGlD,CAAC,uBAAD,EAA0B;AAAED,MAAI,EAAE,QAAR;AAAkBC,MAAI,EAAE;AAAxB,CAA1B,CAHkD,EAIlD,CAAC,kBAAD,EAAqB;AAAED,MAAI,EAAE,QAAR;AAAkBC,MAAI,EAAE;AAAxB,CAArB,CAJkD,EAKlD,CAAC,MAAD,EAAS;AAAED,MAAI,EAAE,QAAR;AAAkBC,MAAI,EAAE,CAAC,EAAD;AAAxB,CAAT,CALkD,CAA3B,CAAT;;AAelB,MAAaC,eAAb,SAAqCN,kBAArC,CAAiE;AAG/DO,cAAYC,MAAZ,EAAkCC,IAAlC,EAA2D;AACzD,UAAMD,MAAN,EAAcC,IAAd;;AAEA,QAAI,CAAC,KAAKC,WAAL,CAAiBC,gCAAeC,MAAhC,CAAL,EAA8C;AAC5C,YAAM,qCAAN;AACD;;AAED,QAAI,CAACN,eAAe,CAACO,YAAhB,CAA6B,KAAKJ,IAAL,CAAUK,IAAvC,CAAL,EAAmD;AACjD,YAAM,4CAAN;AACD;;AAED,SAAKA,IAAL,GAAYf,mBAAmB,CAACgB,WAApB,CAAgC,KAAKN,IAAL,CAAUK,IAA1C,CAAZ;AACD;;AAEkB,SAAZD,YAAY,CAACC,IAAD,EAAa;AAC9B,WAAOA,IAAI,CAACE,MAAL,KAAgBV,eAAe,CAACW,SAAvC;AACD;;AAEY,SAANC,MAAM,CAACC,KAAD,EAAoB;AAC/B,WAAOR,gCAAeS,kBAAf,CAAkC,CACvCC,gBAAOC,IAAP,CAAYX,gCAAeY,MAA3B,CADuC,EAEvCZ,gCAAeC,MAAf,CAAsBY,QAAtB,EAFuC,EAGvC,IAAIC,mBAAJ,CAAcN,KAAd,EAAqBK,QAArB,EAHuC,EAIvCH,gBAAOC,IAAP,CAAYX,gCAAee,QAA3B,CAJuC,CAAlC,CAAP;AAMD;;AA5B8D;;AAAjExB;AACkBI,4BAAY,IAAI,CAAJ,GAAQ,CAAR,GAAY,GAAxB","names":["AuctionDataExtended","mpl_core_1","Data","exports","struct","kind","type","AuctionExtended","constructor","pubkey","info","assertOwner","AuctionProgram_1","PUBKEY","isCompatible","data","deserialize","length","DATA_SIZE","getPDA","vault","findProgramAddress","buffer_1","from","PREFIX","toBuffer","web3_js_1","EXTENDED"],"sources":["../../../src/accounts/AuctionExtended.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}