{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UnVerifyCollection = exports.UnVerifyCollectionArgs = void 0;\n\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\n\nconst web3_js_1 = require(\"@solana/web3.js\");\n\nconst MetadataProgram_1 = require(\"../MetadataProgram\");\n\nclass UnVerifyCollectionArgs extends mpl_core_1.Borsh.Data {\n  constructor() {\n    super(...arguments);\n    this.instruction = 22;\n  }\n\n}\n\nexports.UnVerifyCollectionArgs = UnVerifyCollectionArgs;\nUnVerifyCollectionArgs.SCHEMA = new Map([...UnVerifyCollectionArgs.struct([['instruction', 'u8']])]);\n\nclass UnVerifyCollection extends mpl_core_1.Transaction {\n  constructor(options, params) {\n    super(options);\n    const {\n      feePayer\n    } = options;\n    const {\n      metadata,\n      collectionAuthority,\n      collectionMint,\n      collectionMetadata,\n      collectionMasterEdition,\n      collectionAuthorityRecord\n    } = params;\n    const data = UnVerifyCollectionArgs.serialize();\n    const accounts = [{\n      pubkey: metadata,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: collectionAuthority,\n      isSigner: true,\n      isWritable: true\n    }, {\n      pubkey: feePayer,\n      isSigner: true,\n      isWritable: true\n    }, {\n      pubkey: collectionMint,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: collectionMetadata,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: collectionMasterEdition,\n      isSigner: false,\n      isWritable: false\n    }];\n\n    if (collectionAuthorityRecord) {\n      accounts.push({\n        pubkey: collectionAuthorityRecord,\n        isSigner: false,\n        isWritable: false\n      });\n    }\n\n    this.add(new web3_js_1.TransactionInstruction({\n      keys: accounts,\n      programId: MetadataProgram_1.MetadataProgram.PUBKEY,\n      data\n    }));\n  }\n\n}\n\nexports.UnVerifyCollection = UnVerifyCollection;","map":{"version":3,"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA,MAAaA,sBAAb,SAA4CC,iBAAMC,IAAlD,CAAsD;AAAtDC;;AAEE,uBAAc,EAAd;AACD;;AAHqD;;AAAtDC;AACkBJ,gCAAS,IAAIK,GAAJ,CAAQ,CAAC,GAAGL,sBAAsB,CAACM,MAAvB,CAA8B,CAAC,CAAC,aAAD,EAAgB,IAAhB,CAAD,CAA9B,CAAJ,CAAR,CAAT;;AAalB,MAAaC,kBAAb,SAAwCN,sBAAxC,CAAmD;AACjDE,cAAYK,OAAZ,EAA4CC,MAA5C,EAA4E;AAC1E,UAAMD,OAAN;AACA,UAAM;AAAEE;AAAF,QAAeF,OAArB;AACA,UAAM;AACJG,cADI;AAEJC,yBAFI;AAGJC,oBAHI;AAIJC,wBAJI;AAKJC,6BALI;AAMJC;AANI,QAOFP,MAPJ;AASA,UAAMQ,IAAI,GAAGjB,sBAAsB,CAACkB,SAAvB,EAAb;AACA,UAAMC,QAAQ,GAAG,CACf;AACEC,YAAM,EAAET,QADV;AAEEU,cAAQ,EAAE,KAFZ;AAGEC,gBAAU,EAAE;AAHd,KADe,EAMf;AACEF,YAAM,EAAER,mBADV;AAEES,cAAQ,EAAE,IAFZ;AAGEC,gBAAU,EAAE;AAHd,KANe,EAWf;AACEF,YAAM,EAAEV,QADV;AAEEW,cAAQ,EAAE,IAFZ;AAGEC,gBAAU,EAAE;AAHd,KAXe,EAgBf;AACEF,YAAM,EAAEP,cADV;AAEEQ,cAAQ,EAAE,KAFZ;AAGEC,gBAAU,EAAE;AAHd,KAhBe,EAqBf;AACEF,YAAM,EAAEN,kBADV;AAEEO,cAAQ,EAAE,KAFZ;AAGEC,gBAAU,EAAE;AAHd,KArBe,EA0Bf;AACEF,YAAM,EAAEL,uBADV;AAEEM,cAAQ,EAAE,KAFZ;AAGEC,gBAAU,EAAE;AAHd,KA1Be,CAAjB;;AAgCA,QAAIN,yBAAJ,EAA+B;AAC7BG,cAAQ,CAACI,IAAT,CAAc;AACZH,cAAM,EAAEJ,yBADI;AAEZK,gBAAQ,EAAE,KAFE;AAGZC,kBAAU,EAAE;AAHA,OAAd;AAKD;;AACD,SAAKE,GAAL,CACE,IAAIC,gCAAJ,CAA2B;AACzBC,UAAI,EAAEP,QADmB;AAEzBQ,eAAS,EAAEC,kCAAgBC,MAFF;AAGzBZ;AAHyB,KAA3B,CADF;AAOD;;AA5DgD;;AAAnDb","names":["UnVerifyCollectionArgs","mpl_core_1","Data","constructor","exports","Map","struct","UnVerifyCollection","options","params","feePayer","metadata","collectionAuthority","collectionMint","collectionMetadata","collectionMasterEdition","collectionAuthorityRecord","data","serialize","accounts","pubkey","isSigner","isWritable","push","add","web3_js_1","keys","programId","MetadataProgram_1","PUBKEY"],"sources":["../../../src/transactions/UnverifyCollection.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}