{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EditionMarker = exports.EditionMarkerData = void 0;\n\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\n\nconst web3_js_1 = require(\"@solana/web3.js\");\n\nconst Edition_1 = require(\"./Edition\");\n\nconst MetadataProgram_1 = require(\"../MetadataProgram\");\n\nconst buffer_1 = require(\"buffer\");\n\nconst constants_1 = require(\"./constants\");\n\nclass EditionMarkerData extends mpl_core_1.Borsh.Data {\n  constructor(args) {\n    super(args);\n    this.key = constants_1.MetadataKey.EditionMarker;\n  }\n\n  editionTaken(edition) {\n    const editionOffset = edition % EditionMarker.DATA_SIZE;\n    const indexOffset = Math.floor(editionOffset / 8);\n\n    if (indexOffset > 30) {\n      throw Error('Bad index for edition');\n    }\n\n    const positionInBitsetFromRight = 7 - editionOffset % 8;\n    const mask = Math.pow(2, positionInBitsetFromRight);\n    const appliedMask = this.ledger[indexOffset] & mask;\n    return appliedMask != 0;\n  }\n\n}\n\nexports.EditionMarkerData = EditionMarkerData;\nEditionMarkerData.SCHEMA = EditionMarkerData.struct([['key', 'u8'], ['ledger', [31]]]);\n\nclass EditionMarker extends mpl_core_1.Account {\n  constructor(key, info) {\n    super(key, info);\n\n    if (!this.assertOwner(MetadataProgram_1.MetadataProgram.PUBKEY)) {\n      throw (0, mpl_core_1.ERROR_INVALID_OWNER)();\n    }\n\n    if (!EditionMarker.isCompatible(this.info.data)) {\n      throw (0, mpl_core_1.ERROR_INVALID_ACCOUNT_DATA)();\n    }\n\n    this.data = EditionMarkerData.deserialize(this.info.data);\n  }\n\n  static getPDA(mint, edition) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const editionNumber = Math.floor(edition.toNumber() / 248);\n      return MetadataProgram_1.MetadataProgram.findProgramAddress([buffer_1.Buffer.from(MetadataProgram_1.MetadataProgram.PREFIX), MetadataProgram_1.MetadataProgram.PUBKEY.toBuffer(), new web3_js_1.PublicKey(mint).toBuffer(), buffer_1.Buffer.from(Edition_1.Edition.EDITION_PREFIX), buffer_1.Buffer.from(editionNumber.toString())]);\n    });\n  }\n\n  static isCompatible(data) {\n    return data[0] === constants_1.MetadataKey.EditionMarker;\n  }\n\n}\n\nexports.EditionMarker = EditionMarker;\nEditionMarker.DATA_SIZE = 248;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAOA;;AAEA;;AACA;;AACA;;AACA;;AAGA,MAAaA,iBAAb,SAAuCC,iBAAMC,IAA7C,CAAuD;AASrDC,cAAYC,IAAZ,EAAsB;AACpB,UAAMA,IAAN;AACA,SAAKC,GAAL,GAAWC,wBAAYC,aAAvB;AACD;;AAEDC,cAAY,CAACC,OAAD,EAAgB;AAC1B,UAAMC,aAAa,GAAGD,OAAO,GAAGF,aAAa,CAACI,SAA9C;AACA,UAAMC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWJ,aAAa,GAAG,CAA3B,CAApB;;AAEA,QAAIE,WAAW,GAAG,EAAlB,EAAsB;AACpB,YAAMG,KAAK,CAAC,uBAAD,CAAX;AACD;;AAED,UAAMC,yBAAyB,GAAG,IAAKN,aAAa,GAAG,CAAvD;AACA,UAAMO,IAAI,GAAGJ,IAAI,CAACK,GAAL,CAAS,CAAT,EAAYF,yBAAZ,CAAb;AACA,UAAMG,WAAW,GAAG,KAAKC,MAAL,CAAYR,WAAZ,IAA2BK,IAA/C;AAEA,WAAOE,WAAW,IAAI,CAAtB;AACD;;AA3BoD;;AAAvDE;AACkBrB,2BAASA,iBAAiB,CAACsB,MAAlB,CAAyB,CAChD,CAAC,KAAD,EAAQ,IAAR,CADgD,EAEhD,CAAC,QAAD,EAAW,CAAC,EAAD,CAAX,CAFgD,CAAzB,CAAT;;AA6BlB,MAAaf,aAAb,SAAmCN,kBAAnC,CAA6D;AAG3DE,cAAYE,GAAZ,EAA+BkB,IAA/B,EAAwD;AACtD,UAAMlB,GAAN,EAAWkB,IAAX;;AAEA,QAAI,CAAC,KAAKC,WAAL,CAAiBC,kCAAgBC,MAAjC,CAAL,EAA+C;AAC7C,YAAM,qCAAN;AACD;;AAED,QAAI,CAACnB,aAAa,CAACoB,YAAd,CAA2B,KAAKJ,IAAL,CAAUK,IAArC,CAAL,EAAiD;AAC/C,YAAM,4CAAN;AACD;;AAED,SAAKA,IAAL,GAAY5B,iBAAiB,CAAC6B,WAAlB,CAA8B,KAAKN,IAAL,CAAUK,IAAxC,CAAZ;AACD;;AAEkB,SAANE,MAAM,CAACC,IAAD,EAAqBtB,OAArB,EAAgC;;AACjD,YAAMuB,aAAa,GAAGnB,IAAI,CAACC,KAAL,CAAWL,OAAO,CAACwB,QAAR,KAAqB,GAAhC,CAAtB;AAEA,aAAOR,kCAAgBS,kBAAhB,CAAmC,CACxCC,gBAAOC,IAAP,CAAYX,kCAAgBY,MAA5B,CADwC,EAExCZ,kCAAgBC,MAAhB,CAAuBY,QAAvB,EAFwC,EAGxC,IAAIC,mBAAJ,CAAcR,IAAd,EAAoBO,QAApB,EAHwC,EAIxCH,gBAAOC,IAAP,CAAYI,kBAAQC,cAApB,CAJwC,EAKxCN,gBAAOC,IAAP,CAAYJ,aAAa,CAACU,QAAd,EAAZ,CALwC,CAAnC,CAAP;AAOD;AAAA;;AAEkB,SAAZf,YAAY,CAACC,IAAD,EAAa;AAC9B,WAAOA,IAAI,CAAC,CAAD,CAAJ,KAAYtB,wBAAYC,aAA/B;AACD;;AA/B0D;;AAA7Dc;AACkBd,0BAAY,GAAZ","names":["EditionMarkerData","mpl_core_1","Data","constructor","args","key","constants_1","EditionMarker","editionTaken","edition","editionOffset","DATA_SIZE","indexOffset","Math","floor","Error","positionInBitsetFromRight","mask","pow","appliedMask","ledger","exports","struct","info","assertOwner","MetadataProgram_1","PUBKEY","isCompatible","data","deserialize","getPDA","mint","editionNumber","toNumber","findProgramAddress","buffer_1","from","PREFIX","toBuffer","web3_js_1","Edition_1","EDITION_PREFIX","toString"],"sources":["../../../src/accounts/EditionMarker.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}