{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ApproveCollectionAuthority = exports.ApproveCollectionAuthorityArgs = void 0;\n\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\n\nconst web3_js_1 = require(\"@solana/web3.js\");\n\nconst MetadataProgram_1 = require(\"../MetadataProgram\");\n\nclass ApproveCollectionAuthorityArgs extends mpl_core_1.Borsh.Data {\n  constructor() {\n    super(...arguments);\n    this.instruction = 23;\n  }\n\n}\n\nexports.ApproveCollectionAuthorityArgs = ApproveCollectionAuthorityArgs;\nApproveCollectionAuthorityArgs.SCHEMA = new Map([...ApproveCollectionAuthorityArgs.struct([['instruction', 'u8']])]);\n\nclass ApproveCollectionAuthority extends mpl_core_1.Transaction {\n  constructor(options, params) {\n    super(options);\n    const {\n      feePayer\n    } = options;\n    const {\n      metadata,\n      collectionAuthorityRecord,\n      newCollectionAuthority,\n      updateAuthority,\n      mint\n    } = params;\n    const data = ApproveCollectionAuthorityArgs.serialize();\n    const accounts = [{\n      pubkey: collectionAuthorityRecord,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: newCollectionAuthority,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: updateAuthority,\n      isSigner: true,\n      isWritable: false\n    }, {\n      pubkey: feePayer,\n      isSigner: true,\n      isWritable: true\n    }, {\n      pubkey: metadata,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: mint,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: web3_js_1.SystemProgram.programId,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: web3_js_1.SYSVAR_RENT_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }];\n    this.add(new web3_js_1.TransactionInstruction({\n      keys: accounts,\n      programId: MetadataProgram_1.MetadataProgram.PUBKEY,\n      data\n    }));\n  }\n\n}\n\nexports.ApproveCollectionAuthority = ApproveCollectionAuthority;","map":{"version":3,"mappings":";;;;;;;AAAA;;AACA;;AAOA;;AAEA,MAAaA,8BAAb,SAAoDC,iBAAMC,IAA1D,CAA8D;AAA9DC;;AAIE,uBAAc,EAAd;AACD;;AAL6D;;AAA9DC;AACkBJ,wCAAS,IAAIK,GAAJ,CAAQ,CAC/B,GAAGL,8BAA8B,CAACM,MAA/B,CAAsC,CAAC,CAAC,aAAD,EAAgB,IAAhB,CAAD,CAAtC,CAD4B,CAAR,CAAT;;AAclB,MAAaC,0BAAb,SAAgDN,sBAAhD,CAA2D;AACzDE,cAAYK,OAAZ,EAA4CC,MAA5C,EAAoF;AAClF,UAAMD,OAAN;AACA,UAAM;AAAEE;AAAF,QAAeF,OAArB;AACA,UAAM;AAAEG,cAAF;AAAYC,+BAAZ;AAAuCC,4BAAvC;AAA+DC,qBAA/D;AAAgFC;AAAhF,QACJN,MADF;AAGA,UAAMO,IAAI,GAAGhB,8BAA8B,CAACiB,SAA/B,EAAb;AACA,UAAMC,QAAQ,GAAG,CACf;AACEC,YAAM,EAAEP,yBADV;AAEEQ,cAAQ,EAAE,KAFZ;AAGEC,gBAAU,EAAE;AAHd,KADe,EAMf;AACEF,YAAM,EAAEN,sBADV;AAEEO,cAAQ,EAAE,KAFZ;AAGEC,gBAAU,EAAE;AAHd,KANe,EAWf;AACEF,YAAM,EAAEL,eADV;AAEEM,cAAQ,EAAE,IAFZ;AAGEC,gBAAU,EAAE;AAHd,KAXe,EAgBf;AACEF,YAAM,EAAET,QADV;AAEEU,cAAQ,EAAE,IAFZ;AAGEC,gBAAU,EAAE;AAHd,KAhBe,EAqBf;AACEF,YAAM,EAAER,QADV;AAEES,cAAQ,EAAE,KAFZ;AAGEC,gBAAU,EAAE;AAHd,KArBe,EA0Bf;AACEF,YAAM,EAAEJ,IADV;AAEEK,cAAQ,EAAE,KAFZ;AAGEC,gBAAU,EAAE;AAHd,KA1Be,EA+Bf;AACEF,YAAM,EAAEG,wBAAcC,SADxB;AAEEH,cAAQ,EAAE,KAFZ;AAGEC,gBAAU,EAAE;AAHd,KA/Be,EAoCf;AACEF,YAAM,EAAEG,4BADV;AAEEF,cAAQ,EAAE,KAFZ;AAGEC,gBAAU,EAAE;AAHd,KApCe,CAAjB;AA2CA,SAAKG,GAAL,CACE,IAAIF,gCAAJ,CAA2B;AACzBG,UAAI,EAAEP,QADmB;AAEzBK,eAAS,EAAEG,kCAAgBC,MAFF;AAGzBX;AAHyB,KAA3B,CADF;AAOD;;AA1DwD;;AAA3DZ","names":["ApproveCollectionAuthorityArgs","mpl_core_1","Data","constructor","exports","Map","struct","ApproveCollectionAuthority","options","params","feePayer","metadata","collectionAuthorityRecord","newCollectionAuthority","updateAuthority","mint","data","serialize","accounts","pubkey","isSigner","isWritable","web3_js_1","programId","add","keys","MetadataProgram_1","PUBKEY"],"sources":["../../../src/transactions/ApproveCollectionAuthority.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}