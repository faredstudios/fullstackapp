{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MSI\\\\Documents\\\\CG\\\\fullstackapp\\\\frontend-app\\\\src\\\\containers\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useEffect, useState } from 'react';\nimport { Routes, Route, useNavigate } from 'react-router-dom';\nimport '../components/styles/App.css';\nimport { Provider } from \"react-redux\";\nimport { configureStore } from '../store';\nimport SwitchRoute from './SwitchRoute';\nimport background from '../components/images/daytoner2.jpg';\nimport Navbar from './Navbar';\nimport { authUser } from \"../store/actions/auth\";\nimport { apiCall } from \"../services/api\";\nimport * as web3 from \"@solana/web3.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isPhantomInstalled = window.solana && window.solana.isPhantom;\nconst store = configureStore();\n\nconst App = () => {\n  _s();\n\n  const [walletAddress, setWalletAddress] = useState(null);\n  const [username, setUsername] = useState(null);\n  const navigate = useNavigate();\n\n  const createConnection = () => {\n    return new web3.Connection(web3.clusterApiUrl(\"devnet\"), 'confirmed');\n  };\n\n  const checkIfWalletIsConnected = async () => {\n    try {\n      const {\n        solana\n      } = window;\n\n      if (solana) {\n        if (solana.isPhantom) {\n          console.log('Phantom wallet found!');\n          const response = await solana.connect({\n            onlyIfTrusted: true\n          });\n          const userData = {\n            walletID: response.publicKey.toString()\n          };\n          console.log('Connected with Public Key:', userData.walletID);\n          setWalletAddress(userData.walletID);\n          const airdropSignature = await connection.requestAirdrop(userData.walletID, web3.LAMPORTS_PER_SOL);\n          apiCall(\"post\", `/api/auth/signin`, userData).then(_ref => {\n            let {\n              token,\n              ...user\n            } = _ref;\n            setUsername(user.username);\n            console.log(\"User found:\", username);\n          }).catch(err => {\n            console.log(\"User not registered\");\n            navigate(\"/register\");\n          });\n        }\n      } else {\n        alert('Solana object not found! Get a Phantom Wallet');\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const connectWallet = async () => {\n    const {\n      solana\n    } = window;\n\n    if (solana) {\n      const response = await solana.connect();\n      const userData = {\n        walletID: response.publicKey.toString()\n      };\n      console.log('Connected with Public Key:', userData.walletID);\n      setWalletAddress(userData.walletID);\n      apiCall(\"post\", `/api/auth/signin`, userData).then(_ref2 => {\n        let {\n          token,\n          ...user\n        } = _ref2;\n        setUsername(user.username);\n        console.log(\"User found:\", username);\n      }).catch(err => {\n        console.log(\"User not registered\");\n        navigate(\"/register\");\n      });\n    }\n  };\n\n  function logout() {\n    setWalletAddress(null);\n    window.solana.request({\n      method: \"disconnect\"\n    });\n    window.solana.on('disconnect', () => console.log(\"disconnected!\"));\n  }\n\n  const renderNotConnectedContainer = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      class: \"connectbtn fullwidth\",\n      onClick: connectWallet,\n      children: \"CONNECT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Connect to Phantom Wallet to log in your account.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 3\n  }, this);\n\n  const renderConnectedUser = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          className: \"userName\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"userDP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 39\n          }, this), username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"dropdown\",\n          children: [!username && /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"settingsli\",\n            onClick: connectWallet,\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              children: \"Register Account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 72\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"settingsli\",\n            onClick: connectWallet,\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              children: \"Change Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 58\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"settingsli\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              children: \"Account Settings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 34\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"settingsli\",\n            onClick: logout,\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#logout\",\n              children: \"Logout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 51\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userCurrency\",\n      children: \"0.00 SOL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userSocial\",\n      children: \"Socials\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"friendlist\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"friendName\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"friendDP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 7\n        }, this), \" ExampleFriend01\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"friendName\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"friendDP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 7\n        }, this), \" ExampleFriend02\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"friendName\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"friendDP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 7\n        }, this), \" ExampleFriend03\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"friendName\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"friendDP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 7\n        }, this), \" ExampleFriend04\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 7\n  }, this);\n\n  useEffect(() => {\n    const onLoad = async () => {\n      await checkIfWalletIsConnected();\n    };\n\n    window.addEventListener('load', onLoad);\n    return () => window.removeEventListener('load', onLoad);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"background\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fadetop\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App\",\n          children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(SwitchRoute, {\n            walletID: walletAddress,\n            username: username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sideBar\",\n        children: [walletAddress && renderConnectedUser(), !walletAddress && renderNotConnectedContainer()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 3\n  }, this);\n};\n\n_s(App, \"tepj0bD/j0A4NRnTTvgbG3cTj6o=\", false, function () {\n  return [useNavigate];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/MSI/Documents/CG/fullstackapp/frontend-app/src/containers/App.js"],"names":["React","Component","useEffect","useState","Routes","Route","useNavigate","Provider","configureStore","SwitchRoute","background","Navbar","authUser","apiCall","web3","isPhantomInstalled","window","solana","isPhantom","store","App","walletAddress","setWalletAddress","username","setUsername","navigate","createConnection","Connection","clusterApiUrl","checkIfWalletIsConnected","console","log","response","connect","onlyIfTrusted","userData","walletID","publicKey","toString","airdropSignature","connection","requestAirdrop","LAMPORTS_PER_SOL","then","token","user","catch","err","alert","error","connectWallet","logout","request","method","on","renderNotConnectedContainer","renderConnectedUser","onLoad","addEventListener","removeEventListener"],"mappings":"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","sourcesContent":["import React, {Component, useEffect, useState} from 'react';\r\nimport {Routes, Route, useNavigate} from 'react-router-dom';\r\nimport '../components/styles/App.css';\r\nimport { Provider } from \"react-redux\";\r\nimport { configureStore } from '../store';\r\nimport SwitchRoute from './SwitchRoute';\r\nimport background from '../components/images/daytoner2.jpg';\r\nimport Navbar from './Navbar';\r\nimport { authUser } from \"../store/actions/auth\";\r\nimport { apiCall } from \"../services/api\";\r\nimport * as web3 from \"@solana/web3.js\";\r\n\r\nconst isPhantomInstalled = window.solana && window.solana.isPhantom\r\nconst store = configureStore()\r\n\r\nconst App = () => {\r\n\tconst [walletAddress, setWalletAddress] = useState(null);\r\n\tconst [username, setUsername] = useState(null);\r\n\r\n\tconst navigate = useNavigate()\r\n\r\n\tconst createConnection = () => {\r\n    return new web3.Connection(web3.clusterApiUrl(\"devnet\"),'confirmed',);\r\n\t};\r\n\r\n\tconst checkIfWalletIsConnected = async () => {\r\n\t\ttry {\r\n\t\t\tconst { solana } = window;\r\n\r\n\t\t\tif (solana) {\r\n\t\t\t\tif (solana.isPhantom) {\r\n\t\t\t\t\tconsole.log('Phantom wallet found!');\r\n\t\t\t\t\tconst response = await solana.connect({ onlyIfTrusted: true });\r\n\t\t\t\t\tconst userData = {walletID: response.publicKey.toString()}\r\n\t\t\t\t\tconsole.log('Connected with Public Key:',userData.walletID);\r\n\t\t\t\t\tsetWalletAddress(userData.walletID);\r\n\t\t\t\t\tconst airdropSignature = await connection.requestAirdrop(userData.walletID,web3.LAMPORTS_PER_SOL,);\r\n\r\n\t\t\t\t\tapiCall(\"post\", `/api/auth/signin`, userData).then(({token, ...user}) => {\r\n\t\t\t\t\t\tsetUsername(user.username);\r\n\t\t\t\t\t\tconsole.log(\"User found:\",username);\r\n\t\t\t\t\t}).catch(err => {\r\n\t\t\t\t\t\tconsole.log(\"User not registered\");\r\n\t\t\t\t\t\tnavigate(\"/register\");\r\n\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\talert('Solana object not found! Get a Phantom Wallet');\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error(error);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\tconst connectWallet = async () => {\r\n\t\tconst { solana } = window;\r\n\r\n\t\tif (solana) {\r\n\t\t\tconst response = await solana.connect();\r\n\t\t\tconst userData = {walletID: response.publicKey.toString()}\r\n\t\t\tconsole.log('Connected with Public Key:', userData.walletID);\r\n\t\t\tsetWalletAddress(userData.walletID);\r\n\t\t\tapiCall(\"post\", `/api/auth/signin`, userData).then(({token, ...user}) => {\r\n\t\t\t\tsetUsername(user.username);\r\n\t\t\t\tconsole.log(\"User found:\",username);\r\n\t\t\t}).catch(err => {\r\n\t\t\t\tconsole.log(\"User not registered\");\r\n\t\t\t\tnavigate(\"/register\");\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\tfunction logout(){\r\n\t\tsetWalletAddress(null);\r\n\t\twindow.solana.request({ method: \"disconnect\" });\r\n\t\twindow.solana.on('disconnect', () => console.log(\"disconnected!\"));\r\n\t}\r\n\tconst renderNotConnectedContainer = () => (\r\n\t\t<div>\r\n\t\t\t<button class=\"connectbtn fullwidth\" onClick={connectWallet}>CONNECT</button>\r\n\t\t\t<div>Connect to Phantom Wallet to log in your account.</div>\r\n\t\t</div>\r\n\t );\r\n\t const renderConnectedUser = () => (\r\n\t     <div>\r\n\t\t\t<ul>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<a href=\"#\" className=\"userName\"><div className=\"userDP\"></div>{username}</a>\r\n\t\t\t\t\t<ul className=\"dropdown\">\r\n\t\t\t\t\t\t{!username && <li className=\"settingsli\" onClick={connectWallet}><a href=\"#\">Register Account</a></li>}\r\n\t\t\t\t\t\t<li className=\"settingsli\" onClick={connectWallet}><a href=\"#\">Change Username</a></li>\r\n\t\t\t\t\t\t<li className=\"settingsli\"><a href=\"#\">Account Settings</a></li>\r\n\t\t\t\t\t\t<li className=\"settingsli\" onClick={logout}><a href=\"#logout\">Logout</a></li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t\t<div className=\"userCurrency\">\r\n\t\t\t\t0.00 SOL\r\n\t\t\t</div>\r\n\t\t\t<div className=\"userSocial\">\r\n\t\t\t\tSocials\r\n\t\t\t</div>\r\n\t\t\t\t<ul className=\"friendlist\">\r\n\t\t\t\t\t<li className=\"friendName\">\r\n\t\t\t\t\t\t<div className=\"friendDP\"></div> ExampleFriend01\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className=\"friendName\">\r\n\t\t\t\t\t\t<div className=\"friendDP\"></div> ExampleFriend02\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className=\"friendName\">\r\n\t\t\t\t\t\t<div className=\"friendDP\"></div> ExampleFriend03\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className=\"friendName\">\r\n\t\t\t\t\t\t<div className=\"friendDP\"></div> ExampleFriend04\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t </div>\r\n\t );\r\n\r\n\tuseEffect(() => {\r\n\t\tconst onLoad = async () => {\r\n\t\t\t  await checkIfWalletIsConnected();\r\n\t\t};\r\n\t\twindow.addEventListener('load', onLoad);\r\n\t\treturn () => window.removeEventListener('load', onLoad);\r\n\t\t}, []);\r\n\r\n\r\n\t\treturn (\r\n\t\t<Provider store={store}>\r\n\t\t\t<div className=\"background\">\r\n\t\t\t\t<div className=\"fadetop\">\r\n\t\t\t\t\t<div className = \"App\">\r\n\t\t\t\t\t\t<Navbar/>\r\n\t\t\t\t\t\t<SwitchRoute walletID={walletAddress} username={username}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"sideBar\">\r\n\t\t\t\t\t{walletAddress && renderConnectedUser()}\r\n\t\t\t\t\t{!walletAddress && renderNotConnectedContainer()}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Provider>\r\n\t\t);\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}