{"ast":null,"code":"import { apiCall } from \"../../services/api\";\nimport { SET_CURRENT_USER } from \"../actionTypes\";\nexport function setCurrentUser(user) {\n  return {\n    type: SET_CURRENT_USER,\n    user\n  };\n}\nexport function authUser(type, userData) {\n  return dispatch => {\n    return new Promise((resolve, reject) => {\n      return apiCall(\"post\", '/api/auth/signup', userData).then(_ref => {\n        let {\n          token,\n          ...user\n        } = _ref;\n        localStorage.setItem(\"jwToken\", token);\n        dispatch(setCurrentUser(user));\n        resolve();\n      }).catch(err => {\n        reject();\n      });\n    });\n  };\n}","map":{"version":3,"sources":["C:/Users/MSI/Documents/CG/fullstackapp/frontend-app/src/store/actions/auth.js"],"names":["apiCall","SET_CURRENT_USER","setCurrentUser","user","type","authUser","userData","dispatch","Promise","resolve","reject","then","token","localStorage","setItem","catch","err"],"mappings":"AAAA,SAASA,OAAT,QAAwB,oBAAxB;AACA,SAASC,gBAAT,QAAiC,gBAAjC;AAEA,OAAO,SAASC,cAAT,CAAwBC,IAAxB,EAA8B;AACpC,SAAM;AACLC,IAAAA,IAAI,EAAEH,gBADD;AAELE,IAAAA;AAFK,GAAN;AAIA;AAED,OAAO,SAASE,QAAT,CAAkBD,IAAlB,EAAwBE,QAAxB,EAAiC;AACvC,SAAOC,QAAQ,IAAI;AAClB,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACvC,aAAOV,OAAO,CAAC,MAAD,EAAS,kBAAT,EAA6BM,QAA7B,CAAP,CAA8CK,IAA9C,CAAmD,QAAsB;AAAA,YAArB;AAACC,UAAAA,KAAD;AAAQ,aAAGT;AAAX,SAAqB;AAC/EU,QAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCF,KAAhC;AACAL,QAAAA,QAAQ,CAACL,cAAc,CAACC,IAAD,CAAf,CAAR;AACAM,QAAAA,OAAO;AACP,OAJM,EAKNM,KALM,CAKAC,GAAG,IAAI;AACbN,QAAAA,MAAM;AACN,OAPM,CAAP;AAQA,KATM,CAAP;AAUA,GAXD;AAYA","sourcesContent":["import { apiCall } from \"../../services/api\";\r\nimport { SET_CURRENT_USER } from \"../actionTypes\";\r\n\r\nexport function setCurrentUser(user) {\r\n\treturn{\r\n\t\ttype: SET_CURRENT_USER,\r\n\t\tuser\r\n\t};\r\n}\r\n\r\nexport function authUser(type, userData){\r\n\treturn dispatch => {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\treturn apiCall(\"post\", '/api/auth/signup', userData).then(({token, ...user}) => {\r\n\t\t\t\tlocalStorage.setItem(\"jwToken\", token)\r\n\t\t\t\tdispatch(setCurrentUser(user));\r\n\t\t\t\tresolve();\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\treject();\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n}"]},"metadata":{},"sourceType":"module"}