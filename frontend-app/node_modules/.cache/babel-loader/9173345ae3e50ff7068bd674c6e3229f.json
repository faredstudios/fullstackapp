{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MetadataProgram = void 0;\n\nconst web3_js_1 = require(\"@solana/web3.js\");\n\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\n\nclass MetadataProgram extends mpl_core_1.Program {\n  static findEditionAccount(mint, editionNumber) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return web3_js_1.PublicKey.findProgramAddress([Buffer.from(MetadataProgram.PREFIX, 'utf8'), MetadataProgram.PUBKEY.toBuffer(), mint.toBuffer(), Buffer.from(MetadataProgram.EDITION, 'utf8'), Buffer.from(editionNumber, 'utf8')], MetadataProgram.PUBKEY);\n    });\n  }\n\n  static findMasterEditionAccount(mint) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return web3_js_1.PublicKey.findProgramAddress([Buffer.from(MetadataProgram.PREFIX, 'utf8'), MetadataProgram.PUBKEY.toBuffer(), mint.toBuffer(), Buffer.from(MetadataProgram.EDITION, 'utf8')], MetadataProgram.PUBKEY);\n    });\n  }\n\n  static findMetadataAccount(mint) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return web3_js_1.PublicKey.findProgramAddress([Buffer.from(MetadataProgram.PREFIX, 'utf8'), MetadataProgram.PUBKEY.toBuffer(), mint.toBuffer()], MetadataProgram.PUBKEY);\n    });\n  }\n\n  static findUseAuthorityAccount(mint, authority) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return web3_js_1.PublicKey.findProgramAddress([Buffer.from(MetadataProgram.PREFIX, 'utf8'), MetadataProgram.PUBKEY.toBuffer(), mint.toBuffer(), Buffer.from(MetadataProgram.USER, 'utf8'), authority.toBuffer()], MetadataProgram.PUBKEY);\n    });\n  }\n\n  static findCollectionAuthorityAccount(mint, authority) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return web3_js_1.PublicKey.findProgramAddress([Buffer.from(MetadataProgram.PREFIX, 'utf8'), MetadataProgram.PUBKEY.toBuffer(), mint.toBuffer(), Buffer.from(MetadataProgram.COLLECTION_AUTHORITY, 'utf8'), authority.toBuffer()], MetadataProgram.PUBKEY);\n    });\n  }\n\n  static findProgramAsBurnerAccount() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return web3_js_1.PublicKey.findProgramAddress([Buffer.from(MetadataProgram.PREFIX, 'utf8'), MetadataProgram.PUBKEY.toBuffer(), Buffer.from(MetadataProgram.BURN, 'utf8')], MetadataProgram.PUBKEY);\n    });\n  }\n\n}\n\nexports.MetadataProgram = MetadataProgram;\nMetadataProgram.PREFIX = 'metadata';\nMetadataProgram.EDITION = 'edition';\nMetadataProgram.USER = 'user';\nMetadataProgram.COLLECTION_AUTHORITY = 'collection_authority';\nMetadataProgram.BURN = 'burn';\nMetadataProgram.PUBKEY = new web3_js_1.PublicKey(mpl_core_1.config.programs.metadata);","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAEA,MAAaA,eAAb,SAAqCC,kBAArC,CAA4C;AAQX,SAAlBC,kBAAkB,CAC7BC,IAD6B,EAE7BC,aAF6B,EAER;;AAErB,aAAOC,oBAAUC,kBAAV,CACL,CACEC,MAAM,CAACC,IAAP,CAAYR,eAAe,CAACS,MAA5B,EAAoC,MAApC,CADF,EAEET,eAAe,CAACU,MAAhB,CAAuBC,QAAvB,EAFF,EAGER,IAAI,CAACQ,QAAL,EAHF,EAIEJ,MAAM,CAACC,IAAP,CAAYR,eAAe,CAACY,OAA5B,EAAqC,MAArC,CAJF,EAKEL,MAAM,CAACC,IAAP,CAAYJ,aAAZ,EAA2B,MAA3B,CALF,CADK,EAQLJ,eAAe,CAACU,MARX,CAAP;AAUD;AAAA;;AACoC,SAAxBG,wBAAwB,CAACV,IAAD,EAAgB;;AACnD,aAAOE,oBAAUC,kBAAV,CACL,CACEC,MAAM,CAACC,IAAP,CAAYR,eAAe,CAACS,MAA5B,EAAoC,MAApC,CADF,EAEET,eAAe,CAACU,MAAhB,CAAuBC,QAAvB,EAFF,EAGER,IAAI,CAACQ,QAAL,EAHF,EAIEJ,MAAM,CAACC,IAAP,CAAYR,eAAe,CAACY,OAA5B,EAAqC,MAArC,CAJF,CADK,EAOLZ,eAAe,CAACU,MAPX,CAAP;AASD;AAAA;;AAE+B,SAAnBI,mBAAmB,CAACX,IAAD,EAAgB;;AAC9C,aAAOE,oBAAUC,kBAAV,CACL,CACEC,MAAM,CAACC,IAAP,CAAYR,eAAe,CAACS,MAA5B,EAAoC,MAApC,CADF,EAEET,eAAe,CAACU,MAAhB,CAAuBC,QAAvB,EAFF,EAGER,IAAI,CAACQ,QAAL,EAHF,CADK,EAMLX,eAAe,CAACU,MANX,CAAP;AAQD;AAAA;;AAEmC,SAAvBK,uBAAuB,CAClCZ,IADkC,EAElCa,SAFkC,EAEd;;AAEpB,aAAOX,oBAAUC,kBAAV,CACL,CACEC,MAAM,CAACC,IAAP,CAAYR,eAAe,CAACS,MAA5B,EAAoC,MAApC,CADF,EAEET,eAAe,CAACU,MAAhB,CAAuBC,QAAvB,EAFF,EAGER,IAAI,CAACQ,QAAL,EAHF,EAIEJ,MAAM,CAACC,IAAP,CAAYR,eAAe,CAACiB,IAA5B,EAAkC,MAAlC,CAJF,EAKED,SAAS,CAACL,QAAV,EALF,CADK,EAQLX,eAAe,CAACU,MARX,CAAP;AAUD;AAAA;;AAE0C,SAA9BQ,8BAA8B,CACzCf,IADyC,EAEzCa,SAFyC,EAErB;;AAEpB,aAAOX,oBAAUC,kBAAV,CACL,CACEC,MAAM,CAACC,IAAP,CAAYR,eAAe,CAACS,MAA5B,EAAoC,MAApC,CADF,EAEET,eAAe,CAACU,MAAhB,CAAuBC,QAAvB,EAFF,EAGER,IAAI,CAACQ,QAAL,EAHF,EAIEJ,MAAM,CAACC,IAAP,CAAYR,eAAe,CAACmB,oBAA5B,EAAkD,MAAlD,CAJF,EAKEH,SAAS,CAACL,QAAV,EALF,CADK,EAQLX,eAAe,CAACU,MARX,CAAP;AAUD;AAAA;;AAEsC,SAA1BU,0BAA0B;;AACrC,aAAOf,oBAAUC,kBAAV,CACL,CACEC,MAAM,CAACC,IAAP,CAAYR,eAAe,CAACS,MAA5B,EAAoC,MAApC,CADF,EAEET,eAAe,CAACU,MAAhB,CAAuBC,QAAvB,EAFF,EAGEJ,MAAM,CAACC,IAAP,CAAYR,eAAe,CAACqB,IAA5B,EAAkC,MAAlC,CAHF,CADK,EAMLrB,eAAe,CAACU,MANX,CAAP;AAQD;AAAA;;AAvFyC;;AAA5CY;AACkBtB,yBAAS,UAAT;AACAA,0BAAU,SAAV;AACAA,uBAAO,MAAP;AACAA,uCAAuB,sBAAvB;AACAA,uBAAO,MAAP;AACAA,yBAAS,IAAIK,mBAAJ,CAAcJ,kBAAOsB,QAAP,CAAgBC,QAA9B,CAAT","names":["MetadataProgram","mpl_core_1","findEditionAccount","mint","editionNumber","web3_js_1","findProgramAddress","Buffer","from","PREFIX","PUBKEY","toBuffer","EDITION","findMasterEditionAccount","findMetadataAccount","findUseAuthorityAccount","authority","USER","findCollectionAuthorityAccount","COLLECTION_AUTHORITY","findProgramAsBurnerAccount","BURN","exports","programs","metadata"],"sources":["../../src/MetadataProgram.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}