{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nvar _a, _b;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AuctionManager = exports.AuctionManagerV2Data = exports.AuctionManagerStateV2 = exports.AuctionManagerStatus = void 0;\n\nconst web3_js_1 = require(\"@solana/web3.js\");\n\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\n\nconst bs58_1 = __importDefault(require(\"bs58\"));\n\nconst BidRedemptionTicket_1 = require(\"./BidRedemptionTicket\");\n\nconst MetaplexProgram_1 = require(\"../MetaplexProgram\");\n\nconst buffer_1 = require(\"buffer\");\n\nconst mpl_auction_1 = require(\"@metaplex-foundation/mpl-auction\");\n\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\n\nvar AuctionManagerStatus;\n\n(function (AuctionManagerStatus) {\n  AuctionManagerStatus[AuctionManagerStatus[\"Initialized\"] = 0] = \"Initialized\";\n  AuctionManagerStatus[AuctionManagerStatus[\"Validated\"] = 1] = \"Validated\";\n  AuctionManagerStatus[AuctionManagerStatus[\"Running\"] = 2] = \"Running\";\n  AuctionManagerStatus[AuctionManagerStatus[\"Disbursing\"] = 3] = \"Disbursing\";\n  AuctionManagerStatus[AuctionManagerStatus[\"Finished\"] = 4] = \"Finished\";\n})(AuctionManagerStatus = exports.AuctionManagerStatus || (exports.AuctionManagerStatus = {}));\n\nclass AuctionManagerStateV2 extends mpl_core_1.Borsh.Data {\n  constructor() {\n    super(...arguments);\n    this.status = AuctionManagerStatus.Initialized;\n    this.safetyConfigItemsValidated = new bn_js_1.default(0);\n    this.bidsPushedToAcceptPayment = new bn_js_1.default(0);\n    this.hasParticipation = false;\n  }\n\n}\n\nexports.AuctionManagerStateV2 = AuctionManagerStateV2;\n_a = AuctionManagerStateV2;\nAuctionManagerStateV2.SCHEMA = _a.struct([['status', 'u8'], ['safetyConfigItemsValidated', 'u64'], ['bidsPushedToAcceptPayment', 'u64'], ['hasParticipation', 'u8']]);\n\nclass AuctionManagerV2Data extends mpl_core_1.Borsh.Data {\n  constructor(args) {\n    super(args);\n    this.key = MetaplexProgram_1.MetaplexKey.AuctionManagerV2;\n  }\n\n}\n\nexports.AuctionManagerV2Data = AuctionManagerV2Data;\n_b = AuctionManagerV2Data;\nAuctionManagerV2Data.SCHEMA = new Map([...AuctionManagerStateV2.SCHEMA, ..._b.struct([['key', 'u8'], ['store', 'pubkeyAsString'], ['authority', 'pubkeyAsString'], ['auction', 'pubkeyAsString'], ['vault', 'pubkeyAsString'], ['acceptPayment', 'pubkeyAsString'], ['state', AuctionManagerStateV2]])]);\n\nclass AuctionManager extends mpl_core_1.Account {\n  constructor(pubkey, info) {\n    super(pubkey, info);\n\n    if (!this.assertOwner(MetaplexProgram_1.MetaplexProgram.PUBKEY)) {\n      throw (0, mpl_core_1.ERROR_INVALID_OWNER)();\n    }\n\n    if (AuctionManager.isAuctionManagerV1(this.info.data)) {\n      throw (0, mpl_core_1.ERROR_DEPRECATED_ACCOUNT_DATA)();\n    } else if (AuctionManager.isAuctionManagerV2(this.info.data)) {\n      this.data = AuctionManagerV2Data.deserialize(this.info.data);\n    } else {\n      throw (0, mpl_core_1.ERROR_INVALID_ACCOUNT_DATA)();\n    }\n  }\n\n  static isCompatible(data) {\n    return AuctionManager.isAuctionManagerV1(data) || AuctionManager.isAuctionManagerV2(data);\n  }\n\n  static isAuctionManagerV1(data) {\n    return data[0] === MetaplexProgram_1.MetaplexKey.AuctionManagerV1;\n  }\n\n  static isAuctionManagerV2(data) {\n    return data[0] === MetaplexProgram_1.MetaplexKey.AuctionManagerV2;\n  }\n\n  static getPDA(auction) {\n    return MetaplexProgram_1.MetaplexProgram.findProgramAddress([buffer_1.Buffer.from(MetaplexProgram_1.MetaplexProgram.PREFIX), new web3_js_1.PublicKey(auction).toBuffer()]);\n  }\n\n  static findMany(connection) {\n    let filters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return __awaiter(this, void 0, void 0, function* () {\n      return (yield MetaplexProgram_1.MetaplexProgram.getProgramAccounts(connection, {\n        filters: [{\n          memcmp: {\n            offset: 0,\n            bytes: bs58_1.default.encode(buffer_1.Buffer.from([MetaplexProgram_1.MetaplexKey.AuctionManagerV2]))\n          }\n        }, filters.store && {\n          memcmp: {\n            offset: 1,\n            bytes: new web3_js_1.PublicKey(filters.store).toBase58()\n          }\n        }, filters.authority && {\n          memcmp: {\n            offset: 33,\n            bytes: new web3_js_1.PublicKey(filters.authority).toBase58()\n          }\n        }].filter(Boolean)\n      })).map(account => AuctionManager.from(account));\n    });\n  }\n\n  getAuction(connection) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return mpl_auction_1.Auction.load(connection, this.data.auction);\n    });\n  }\n\n  getBidRedemptionTickets(connection) {\n    let haveWinnerIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    return __awaiter(this, void 0, void 0, function* () {\n      return (yield MetaplexProgram_1.MetaplexProgram.getProgramAccounts(connection, {\n        filters: [{\n          memcmp: {\n            offset: 0,\n            bytes: bs58_1.default.encode(buffer_1.Buffer.from([MetaplexProgram_1.MetaplexKey.BidRedemptionTicketV2]))\n          }\n        }, {\n          memcmp: {\n            offset: BidRedemptionTicket_1.WINNER_INDEX_OFFSETS[+haveWinnerIndex],\n            bytes: this.pubkey.toBase58()\n          }\n        }]\n      })).map(account => BidRedemptionTicket_1.BidRedemptionTicket.from(account));\n    });\n  }\n\n}\n\nexports.AuctionManager = AuctionManager;","map":{"version":3,"mappings":"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","names":["AuctionManagerStatus","exports","AuctionManagerStateV2","mpl_core_1","Data","constructor","Initialized","bn_js_1","_a","struct","AuctionManagerV2Data","args","key","MetaplexProgram_1","AuctionManagerV2","Map","SCHEMA","_b","AuctionManager","pubkey","info","assertOwner","PUBKEY","isAuctionManagerV1","data","isAuctionManagerV2","deserialize","isCompatible","AuctionManagerV1","getPDA","auction","findProgramAddress","buffer_1","from","PREFIX","web3_js_1","toBuffer","findMany","connection","filters","getProgramAccounts","memcmp","offset","bytes","bs58_1","encode","store","toBase58","authority","filter","Boolean","map","account","getAuction","mpl_auction_1","load","getBidRedemptionTickets","haveWinnerIndex","BidRedemptionTicketV2","BidRedemptionTicket_1"],"sources":["../../../src/accounts/AuctionManager.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}