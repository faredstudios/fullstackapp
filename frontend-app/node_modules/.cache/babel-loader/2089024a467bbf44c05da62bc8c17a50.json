{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AddTokenToInactiveVault = void 0;\n\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\n\nconst spl_token_1 = require(\"@solana/spl-token\");\n\nconst web3_js_1 = require(\"@solana/web3.js\");\n\nconst Vault_1 = require(\"../accounts/Vault\");\n\nconst VaultProgram_1 = require(\"../VaultProgram\");\n\nconst VaultProgram_2 = require(\"../VaultProgram\");\n\nclass AddTokenToInactiveVault extends mpl_core_1.Transaction {\n  constructor(options, params) {\n    super(options);\n    const {\n      feePayer\n    } = options;\n    const {\n      vault,\n      vaultAuthority,\n      tokenAccount,\n      tokenStoreAccount,\n      transferAuthority,\n      safetyDepositBox,\n      amount\n    } = params;\n    const data = Vault_1.AmountArgs.serialize({\n      instruction: VaultProgram_2.VaultInstructions.AddTokenToInactiveVault,\n      amount\n    });\n    this.add(new web3_js_1.TransactionInstruction({\n      keys: [{\n        pubkey: safetyDepositBox,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: tokenAccount,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: tokenStoreAccount,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: vault,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: vaultAuthority,\n        isSigner: true,\n        isWritable: false\n      }, {\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: false\n      }, {\n        pubkey: transferAuthority,\n        isSigner: true,\n        isWritable: false\n      }, {\n        pubkey: spl_token_1.TOKEN_PROGRAM_ID,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: web3_js_1.SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: web3_js_1.SystemProgram.programId,\n        isSigner: false,\n        isWritable: false\n      }],\n      programId: VaultProgram_1.VaultProgram.PUBKEY,\n      data\n    }));\n  }\n\n}\n\nexports.AddTokenToInactiveVault = AddTokenToInactiveVault;","map":{"version":3,"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAQA;;AACA;;AACA;;AAYA,MAAaA,uBAAb,SAA6CC,sBAA7C,CAAwD;AACtDC,cAAYC,OAAZ,EAA4CC,MAA5C,EAAiF;AAC/E,UAAMD,OAAN;AACA,UAAM;AAAEE;AAAF,QAAeF,OAArB;AACA,UAAM;AACJG,WADI;AAEJC,oBAFI;AAGJC,kBAHI;AAIJC,uBAJI;AAKJC,uBALI;AAMJC,sBANI;AAOJC;AAPI,QAQFR,MARJ;AAUA,UAAMS,IAAI,GAAGC,mBAAWC,SAAX,CAAqB;AAChCC,iBAAW,EAAEC,iCAAkBjB,uBADC;AAEhCY;AAFgC,KAArB,CAAb;AAKA,SAAKM,GAAL,CACE,IAAIC,gCAAJ,CAA2B;AACzBC,UAAI,EAAE,CACJ;AACEC,cAAM,EAAEV,gBADV;AAEEW,gBAAQ,EAAE,KAFZ;AAGEC,kBAAU,EAAE;AAHd,OADI,EAMJ;AACEF,cAAM,EAAEb,YADV;AAEEc,gBAAQ,EAAE,KAFZ;AAGEC,kBAAU,EAAE;AAHd,OANI,EAWJ;AACEF,cAAM,EAAEZ,iBADV;AAEEa,gBAAQ,EAAE,KAFZ;AAGEC,kBAAU,EAAE;AAHd,OAXI,EAgBJ;AACEF,cAAM,EAAEf,KADV;AAEEgB,gBAAQ,EAAE,KAFZ;AAGEC,kBAAU,EAAE;AAHd,OAhBI,EAqBJ;AACEF,cAAM,EAAEd,cADV;AAEEe,gBAAQ,EAAE,IAFZ;AAGEC,kBAAU,EAAE;AAHd,OArBI,EA0BJ;AACEF,cAAM,EAAEhB,QADV;AAEEiB,gBAAQ,EAAE,IAFZ;AAGEC,kBAAU,EAAE;AAHd,OA1BI,EA+BJ;AACEF,cAAM,EAAEX,iBADV;AAEEY,gBAAQ,EAAE,IAFZ;AAGEC,kBAAU,EAAE;AAHd,OA/BI,EAoCJ;AACEF,cAAM,EAAEG,4BADV;AAEEF,gBAAQ,EAAE,KAFZ;AAGEC,kBAAU,EAAE;AAHd,OApCI,EAyCJ;AACEF,cAAM,EAAEF,4BADV;AAEEG,gBAAQ,EAAE,KAFZ;AAGEC,kBAAU,EAAE;AAHd,OAzCI,EA8CJ;AACEF,cAAM,EAAEF,wBAAcM,SADxB;AAEEH,gBAAQ,EAAE,KAFZ;AAGEC,kBAAU,EAAE;AAHd,OA9CI,CADmB;AAqDzBE,eAAS,EAAEC,4BAAaC,MArDC;AAsDzBd;AAtDyB,KAA3B,CADF;AA0DD;;AA7EqD;;AAAxDe","names":["AddTokenToInactiveVault","mpl_core_1","constructor","options","params","feePayer","vault","vaultAuthority","tokenAccount","tokenStoreAccount","transferAuthority","safetyDepositBox","amount","data","Vault_1","serialize","instruction","VaultProgram_2","add","web3_js_1","keys","pubkey","isSigner","isWritable","spl_token_1","programId","VaultProgram_1","PUBKEY","exports"],"sources":["../../../src/transactions/AddTokenToInactiveVault.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}