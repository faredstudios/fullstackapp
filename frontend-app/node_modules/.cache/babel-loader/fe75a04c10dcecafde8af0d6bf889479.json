{"ast":null,"code":"\"use strict\";\n\nvar _a;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.InitVault = exports.InitVaultArgs = void 0;\n\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\n\nconst spl_token_1 = require(\"@solana/spl-token\");\n\nconst web3_js_1 = require(\"@solana/web3.js\");\n\nconst VaultProgram_1 = require(\"../VaultProgram\");\n\nconst VaultProgram_2 = require(\"../VaultProgram\");\n\nclass InitVaultArgs extends mpl_core_1.Borsh.Data {\n  constructor() {\n    super(...arguments);\n    this.instruction = VaultProgram_1.VaultInstructions.InitVault;\n    this.allowFurtherShareCreation = false;\n  }\n\n}\n\nexports.InitVaultArgs = InitVaultArgs;\n_a = InitVaultArgs;\nInitVaultArgs.SCHEMA = _a.struct([['instruction', 'u8'], ['allowFurtherShareCreation', 'u8']]);\n\nclass InitVault extends mpl_core_1.Transaction {\n  constructor(options, params) {\n    super(options);\n    const {\n      vault,\n      vaultAuthority,\n      fractionalMint,\n      redeemTreasury,\n      fractionalTreasury,\n      pricingLookupAddress,\n      allowFurtherShareCreation\n    } = params;\n    const data = InitVaultArgs.serialize({\n      allowFurtherShareCreation\n    });\n    this.add(new web3_js_1.TransactionInstruction({\n      keys: [{\n        pubkey: fractionalMint,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: redeemTreasury,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: fractionalTreasury,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: vault,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: vaultAuthority,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: pricingLookupAddress,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: spl_token_1.TOKEN_PROGRAM_ID,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: web3_js_1.SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }],\n      programId: VaultProgram_2.VaultProgram.PUBKEY,\n      data\n    }));\n  }\n\n}\n\nexports.InitVault = InitVault;","map":{"version":3,"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AAMA;;AACA;;AAEA,MAAaA,aAAb,SAAmCC,iBAAMC,IAAzC,CAAqF;AAArFC;;AAME,uBAAcC,iCAAkBC,SAAhC;AACA,qCAA4B,KAA5B;AACD;;AARoF;;AAArFC;;AACkBN,uBAASO,EAAI,CAACC,MAAL,CAAY,CACnC,CAAC,aAAD,EAAgB,IAAhB,CADmC,EAEnC,CAAC,2BAAD,EAA8B,IAA9B,CAFmC,CAAZ,CAAT;;AAmBlB,MAAaH,SAAb,SAA+BJ,sBAA/B,CAA0C;AACxCE,cAAYM,OAAZ,EAA4CC,MAA5C,EAAmE;AACjE,UAAMD,OAAN;AACA,UAAM;AACJE,WADI;AAEJC,oBAFI;AAGJC,oBAHI;AAIJC,oBAJI;AAKJC,wBALI;AAMJC,0BANI;AAOJC;AAPI,QAQFP,MARJ;AAUA,UAAMQ,IAAI,GAAGlB,aAAa,CAACmB,SAAd,CAAwB;AAAEF;AAAF,KAAxB,CAAb;AAEA,SAAKG,GAAL,CACE,IAAIC,gCAAJ,CAA2B;AACzBC,UAAI,EAAE,CACJ;AACEC,cAAM,EAAEV,cADV;AAEEW,gBAAQ,EAAE,KAFZ;AAGEC,kBAAU,EAAE;AAHd,OADI,EAMJ;AACEF,cAAM,EAAET,cADV;AAEEU,gBAAQ,EAAE,KAFZ;AAGEC,kBAAU,EAAE;AAHd,OANI,EAWJ;AACEF,cAAM,EAAER,kBADV;AAEES,gBAAQ,EAAE,KAFZ;AAGEC,kBAAU,EAAE;AAHd,OAXI,EAgBJ;AACEF,cAAM,EAAEZ,KADV;AAEEa,gBAAQ,EAAE,KAFZ;AAGEC,kBAAU,EAAE;AAHd,OAhBI,EAqBJ;AACEF,cAAM,EAAEX,cADV;AAEEY,gBAAQ,EAAE,KAFZ;AAGEC,kBAAU,EAAE;AAHd,OArBI,EA0BJ;AACEF,cAAM,EAAEP,oBADV;AAEEQ,gBAAQ,EAAE,KAFZ;AAGEC,kBAAU,EAAE;AAHd,OA1BI,EA+BJ;AACEF,cAAM,EAAEG,4BADV;AAEEF,gBAAQ,EAAE,KAFZ;AAGEC,kBAAU,EAAE;AAHd,OA/BI,EAqCJ;AACEF,cAAM,EAAEF,4BADV;AAEEG,gBAAQ,EAAE,KAFZ;AAGEC,kBAAU,EAAE;AAHd,OArCI,CADmB;AA4CzBE,eAAS,EAAEC,4BAAaC,MA5CC;AA6CzBX;AA7CyB,KAA3B,CADF;AAiDD;;AAhEuC;;AAA1CZ","names":["InitVaultArgs","mpl_core_1","Data","constructor","VaultProgram_1","InitVault","exports","_a","struct","options","params","vault","vaultAuthority","fractionalMint","redeemTreasury","fractionalTreasury","pricingLookupAddress","allowFurtherShareCreation","data","serialize","add","web3_js_1","keys","pubkey","isSigner","isWritable","spl_token_1","programId","VaultProgram_2","PUBKEY"],"sources":["../../../src/transactions/InitVault.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}