{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar _a;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PrizeTrackingTicket = exports.PrizeTrackingTicketData = void 0;\n\nconst web3_js_1 = require(\"@solana/web3.js\");\n\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\n\nconst MetaplexProgram_1 = require(\"../MetaplexProgram\");\n\nconst buffer_1 = require(\"buffer\");\n\nclass PrizeTrackingTicketData extends mpl_core_1.Borsh.Data {\n  constructor(args) {\n    super(args);\n    this.key = MetaplexProgram_1.MetaplexKey.PrizeTrackingTicketV1;\n    this.key = MetaplexProgram_1.MetaplexKey.PrizeTrackingTicketV1;\n  }\n\n}\n\nexports.PrizeTrackingTicketData = PrizeTrackingTicketData;\n_a = PrizeTrackingTicketData;\nPrizeTrackingTicketData.SCHEMA = _a.struct([['key', 'u8'], ['metadata', 'pubkeyAsString'], ['supplySnapshot', 'u64'], ['expectedRedemptions', 'u64'], ['redemptions', 'u64']]);\n\nclass PrizeTrackingTicket extends mpl_core_1.Account {\n  constructor(pubkey, info) {\n    super(pubkey, info);\n\n    if (!this.assertOwner(MetaplexProgram_1.MetaplexProgram.PUBKEY)) {\n      throw (0, mpl_core_1.ERROR_INVALID_OWNER)();\n    }\n\n    if (!PrizeTrackingTicket.isCompatible(this.info.data)) {\n      throw (0, mpl_core_1.ERROR_INVALID_ACCOUNT_DATA)();\n    }\n\n    this.data = PrizeTrackingTicketData.deserialize(this.info.data);\n  }\n\n  static isCompatible(data) {\n    return data[0] === MetaplexProgram_1.MetaplexKey.PrizeTrackingTicketV1;\n  }\n\n  static getPDA(auctionManager, mint) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return MetaplexProgram_1.MetaplexProgram.findProgramAddress([buffer_1.Buffer.from(MetaplexProgram_1.MetaplexProgram.PREFIX), MetaplexProgram_1.MetaplexProgram.PUBKEY.toBuffer(), new web3_js_1.PublicKey(auctionManager).toBuffer(), new web3_js_1.PublicKey(mint).toBuffer()]);\n    });\n  }\n\n}\n\nexports.PrizeTrackingTicket = PrizeTrackingTicket;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;AAOA;;AACA;;AAQA,MAAaA,uBAAb,SAA6CC,iBAAMC,IAAnD,CAA6D;AAe3DC,cAAYC,IAAZ,EAAsB;AACpB,UAAMA,IAAN;AAPF,eAAmBC,8BAAYC,qBAA/B;AAQE,SAAKC,GAAL,GAAWF,8BAAYC,qBAAvB;AACD;;AAlB0D;;AAA7DE;;AACkBR,iCAASS,EAAI,CAACC,MAAL,CAAY,CACnC,CAAC,KAAD,EAAQ,IAAR,CADmC,EAEnC,CAAC,UAAD,EAAa,gBAAb,CAFmC,EAGnC,CAAC,gBAAD,EAAmB,KAAnB,CAHmC,EAInC,CAAC,qBAAD,EAAwB,KAAxB,CAJmC,EAKnC,CAAC,aAAD,EAAgB,KAAhB,CALmC,CAAZ,CAAT;;AAoBlB,MAAaC,mBAAb,SAAyCV,kBAAzC,CAAyE;AACvEE,cAAYS,MAAZ,EAAkCC,IAAlC,EAA2D;AACzD,UAAMD,MAAN,EAAcC,IAAd;;AAEA,QAAI,CAAC,KAAKC,WAAL,CAAiBT,kCAAgBU,MAAjC,CAAL,EAA+C;AAC7C,YAAM,qCAAN;AACD;;AAED,QAAI,CAACJ,mBAAmB,CAACK,YAApB,CAAiC,KAAKH,IAAL,CAAUI,IAA3C,CAAL,EAAuD;AACrD,YAAM,4CAAN;AACD;;AAED,SAAKA,IAAL,GAAYjB,uBAAuB,CAACkB,WAAxB,CAAoC,KAAKL,IAAL,CAAUI,IAA9C,CAAZ;AACD;;AAEkB,SAAZD,YAAY,CAACC,IAAD,EAAa;AAC9B,WAAOA,IAAI,CAAC,CAAD,CAAJ,KAAYZ,8BAAYC,qBAA/B;AACD;;AAEkB,SAANa,MAAM,CAACC,cAAD,EAA+BC,IAA/B,EAAiD;;AAClE,aAAOhB,kCAAgBiB,kBAAhB,CAAmC,CACxCC,gBAAOC,IAAP,CAAYnB,kCAAgBoB,MAA5B,CADwC,EAExCpB,kCAAgBU,MAAhB,CAAuBW,QAAvB,EAFwC,EAGxC,IAAIC,mBAAJ,CAAcP,cAAd,EAA8BM,QAA9B,EAHwC,EAIxC,IAAIC,mBAAJ,CAAcN,IAAd,EAAoBK,QAApB,EAJwC,CAAnC,CAAP;AAMD;AAAA;;AA1BsE;;AAAzElB","names":["PrizeTrackingTicketData","mpl_core_1","Data","constructor","args","MetaplexProgram_1","PrizeTrackingTicketV1","key","exports","_a","struct","PrizeTrackingTicket","pubkey","info","assertOwner","PUBKEY","isCompatible","data","deserialize","getPDA","auctionManager","mint","findProgramAddress","buffer_1","from","PREFIX","toBuffer","web3_js_1"],"sources":["../../../src/accounts/PrizeTrackingTicket.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}