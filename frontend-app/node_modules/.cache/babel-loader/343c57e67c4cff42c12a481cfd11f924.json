{"ast":null,"code":"\"use strict\";\n\nvar _a;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RedeemShares = exports.RedeemSharesArgs = void 0;\n\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\n\nconst spl_token_1 = require(\"@solana/spl-token\");\n\nconst web3_js_1 = require(\"@solana/web3.js\");\n\nconst VaultProgram_1 = require(\"../VaultProgram\");\n\nconst VaultProgram_2 = require(\"../VaultProgram\");\n\nclass RedeemSharesArgs extends mpl_core_1.Borsh.Data {\n  constructor() {\n    super(...arguments);\n    this.instruction = VaultProgram_1.VaultInstructions.RedeemShares;\n  }\n\n}\n\nexports.RedeemSharesArgs = RedeemSharesArgs;\n_a = RedeemSharesArgs;\nRedeemSharesArgs.SCHEMA = _a.struct([['instruction', 'u8']]);\n\nclass RedeemShares extends mpl_core_1.Transaction {\n  constructor(options, params) {\n    super(options);\n    const {\n      vault,\n      burnAuthority,\n      fractionMint,\n      outstandingSharesAccount,\n      proceedsAccount,\n      redeemTreasury,\n      transferAuthority\n    } = params;\n    const data = RedeemSharesArgs.serialize();\n    this.add(new web3_js_1.TransactionInstruction({\n      keys: [{\n        pubkey: outstandingSharesAccount,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: proceedsAccount,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: fractionMint,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: redeemTreasury,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: transferAuthority,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: burnAuthority,\n        isSigner: true,\n        isWritable: false\n      }, {\n        pubkey: vault,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: spl_token_1.TOKEN_PROGRAM_ID,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: web3_js_1.SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }],\n      programId: VaultProgram_2.VaultProgram.PUBKEY,\n      data\n    }));\n  }\n\n}\n\nexports.RedeemShares = RedeemShares;","map":{"version":3,"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AAMA;;AACA;;AAEA,MAAaA,gBAAb,SAAsCC,iBAAMC,IAA5C,CAAgD;AAAhDC;;AAGE,uBAAcC,iCAAkBC,YAAhC;AACD;;AAJ+C;;AAAhDC;;AACkBN,0BAASO,EAAI,CAACC,MAAL,CAAY,CAAC,CAAC,aAAD,EAAgB,IAAhB,CAAD,CAAZ,CAAT;;AAelB,MAAaH,YAAb,SAAkCJ,sBAAlC,CAA6C;AAC3CE,cAAYM,OAAZ,EAA4CC,MAA5C,EAAqE;AACnE,UAAMD,OAAN;AACA,UAAM;AACJE,WADI;AAEJC,mBAFI;AAGJC,kBAHI;AAIJC,8BAJI;AAKJC,qBALI;AAMJC,oBANI;AAOJC;AAPI,QAQFP,MARJ;AAUA,UAAMQ,IAAI,GAAGlB,gBAAgB,CAACmB,SAAjB,EAAb;AAEA,SAAKC,GAAL,CACE,IAAIC,gCAAJ,CAA2B;AACzBC,UAAI,EAAE,CACJ;AACEC,cAAM,EAAET,wBADV;AAEEU,gBAAQ,EAAE,KAFZ;AAGEC,kBAAU,EAAE;AAHd,OADI,EAMJ;AACEF,cAAM,EAAER,eADV;AAEES,gBAAQ,EAAE,KAFZ;AAGEC,kBAAU,EAAE;AAHd,OANI,EAWJ;AACEF,cAAM,EAAEV,YADV;AAEEW,gBAAQ,EAAE,KAFZ;AAGEC,kBAAU,EAAE;AAHd,OAXI,EAgBJ;AACEF,cAAM,EAAEP,cADV;AAEEQ,gBAAQ,EAAE,KAFZ;AAGEC,kBAAU,EAAE;AAHd,OAhBI,EAqBJ;AACEF,cAAM,EAAEN,iBADV;AAEEO,gBAAQ,EAAE,KAFZ;AAGEC,kBAAU,EAAE;AAHd,OArBI,EA2BJ;AACEF,cAAM,EAAEX,aADV;AAEEY,gBAAQ,EAAE,IAFZ;AAGEC,kBAAU,EAAE;AAHd,OA3BI,EAgCJ;AACEF,cAAM,EAAEZ,KADV;AAEEa,gBAAQ,EAAE,KAFZ;AAGEC,kBAAU,EAAE;AAHd,OAhCI,EAqCJ;AACEF,cAAM,EAAEG,4BADV;AAEEF,gBAAQ,EAAE,KAFZ;AAGEC,kBAAU,EAAE;AAHd,OArCI,EA0CJ;AACEF,cAAM,EAAEF,4BADV;AAEEG,gBAAQ,EAAE,KAFZ;AAGEC,kBAAU,EAAE;AAHd,OA1CI,CADmB;AAiDzBE,eAAS,EAAEC,4BAAaC,MAjDC;AAkDzBX;AAlDyB,KAA3B,CADF;AAsDD;;AArE0C;;AAA7CZ","names":["RedeemSharesArgs","mpl_core_1","Data","constructor","VaultProgram_1","RedeemShares","exports","_a","struct","options","params","vault","burnAuthority","fractionMint","outstandingSharesAccount","proceedsAccount","redeemTreasury","transferAuthority","data","serialize","add","web3_js_1","keys","pubkey","isSigner","isWritable","spl_token_1","programId","VaultProgram_2","PUBKEY"],"sources":["../../../src/transactions/RedeemShares.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}