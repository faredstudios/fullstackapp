{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CancelBid = exports.CancelBidArgs = void 0;\n\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\n\nconst spl_token_1 = require(\"@solana/spl-token\");\n\nconst web3_js_1 = require(\"@solana/web3.js\");\n\nconst AuctionProgram_1 = require(\"../AuctionProgram\");\n\nclass CancelBidArgs extends mpl_core_1.Borsh.Data {\n  constructor() {\n    super(...arguments);\n    this.instruction = 0;\n  }\n\n}\n\nexports.CancelBidArgs = CancelBidArgs;\nCancelBidArgs.SCHEMA = CancelBidArgs.struct([['instruction', 'u8'], ['resource', 'pubkeyAsString']]);\n\nclass CancelBid extends mpl_core_1.Transaction {\n  constructor(options, params) {\n    super(options);\n    const {\n      auction,\n      auctionExtended,\n      bidderPot,\n      bidderMeta,\n      bidder,\n      bidderToken,\n      bidderPotToken,\n      tokenMint,\n      resource\n    } = params;\n    const data = CancelBidArgs.serialize({\n      resource: resource.toString()\n    });\n    this.add(new web3_js_1.TransactionInstruction({\n      keys: [{\n        pubkey: bidder,\n        isSigner: true,\n        isWritable: false\n      }, {\n        pubkey: bidderToken,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: bidderPot,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: bidderPotToken,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: bidderMeta,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: auction,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: auctionExtended,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: tokenMint,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: web3_js_1.SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: web3_js_1.SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: web3_js_1.SystemProgram.programId,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: spl_token_1.TOKEN_PROGRAM_ID,\n        isSigner: false,\n        isWritable: false\n      }],\n      programId: AuctionProgram_1.AuctionProgram.PUBKEY,\n      data\n    }));\n  }\n\n}\n\nexports.CancelBid = CancelBid;","map":{"version":3,"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAQA;;AAEA,MAAaA,aAAb,SAAmCC,iBAAMC,IAAzC,CAA4E;AAA5EC;;AAME,uBAAc,CAAd;AAED;;AAR2E;;AAA5EC;AACkBJ,uBAASA,aAAa,CAACK,MAAd,CAAqB,CAC5C,CAAC,aAAD,EAAgB,IAAhB,CAD4C,EAE5C,CAAC,UAAD,EAAa,gBAAb,CAF4C,CAArB,CAAT;;AAqBlB,MAAaC,SAAb,SAA+BL,sBAA/B,CAA0C;AACxCE,cAAYI,OAAZ,EAA4CC,MAA5C,EAAmE;AACjE,UAAMD,OAAN;AACA,UAAM;AACJE,aADI;AAEJC,qBAFI;AAGJC,eAHI;AAIJC,gBAJI;AAKJC,YALI;AAMJC,iBANI;AAOJC,oBAPI;AAQJC,eARI;AASJC;AATI,QAUFT,MAVJ;AAYA,UAAMU,IAAI,GAAGlB,aAAa,CAACmB,SAAd,CAAwB;AAAEF,cAAQ,EAAEA,QAAQ,CAACG,QAAT;AAAZ,KAAxB,CAAb;AAEA,SAAKC,GAAL,CACE,IAAIC,gCAAJ,CAA2B;AACzBC,UAAI,EAAE,CACJ;AACEC,cAAM,EAAEX,MADV;AAEEY,gBAAQ,EAAE,IAFZ;AAGEC,kBAAU,EAAE;AAHd,OADI,EAMJ;AACEF,cAAM,EAAEV,WADV;AAEEW,gBAAQ,EAAE,KAFZ;AAGEC,kBAAU,EAAE;AAHd,OANI,EAWJ;AACEF,cAAM,EAAEb,SADV;AAEEc,gBAAQ,EAAE,KAFZ;AAGEC,kBAAU,EAAE;AAHd,OAXI,EAgBJ;AACEF,cAAM,EAAET,cADV;AAEEU,gBAAQ,EAAE,KAFZ;AAGEC,kBAAU,EAAE;AAHd,OAhBI,EAqBJ;AACEF,cAAM,EAAEZ,UADV;AAEEa,gBAAQ,EAAE,KAFZ;AAGEC,kBAAU,EAAE;AAHd,OArBI,EA0BJ;AACEF,cAAM,EAAEf,OADV;AAEEgB,gBAAQ,EAAE,KAFZ;AAGEC,kBAAU,EAAE;AAHd,OA1BI,EA+BJ;AACEF,cAAM,EAAEd,eADV;AAEEe,gBAAQ,EAAE,KAFZ;AAGEC,kBAAU,EAAE;AAHd,OA/BI,EAoCJ;AACEF,cAAM,EAAER,SADV;AAEES,gBAAQ,EAAE,KAFZ;AAGEC,kBAAU,EAAE;AAHd,OApCI,EAyCJ;AACEF,cAAM,EAAEF,6BADV;AAEEG,gBAAQ,EAAE,KAFZ;AAGEC,kBAAU,EAAE;AAHd,OAzCI,EA8CJ;AACEF,cAAM,EAAEF,4BADV;AAEEG,gBAAQ,EAAE,KAFZ;AAGEC,kBAAU,EAAE;AAHd,OA9CI,EAmDJ;AACEF,cAAM,EAAEF,wBAAcK,SADxB;AAEEF,gBAAQ,EAAE,KAFZ;AAGEC,kBAAU,EAAE;AAHd,OAnDI,EAwDJ;AACEF,cAAM,EAAEI,4BADV;AAEEH,gBAAQ,EAAE,KAFZ;AAGEC,kBAAU,EAAE;AAHd,OAxDI,CADmB;AA+DzBC,eAAS,EAAEE,gCAAeC,MA/DD;AAgEzBZ;AAhEyB,KAA3B,CADF;AAoED;;AArFuC;;AAA1Cd","names":["CancelBidArgs","mpl_core_1","Data","constructor","exports","struct","CancelBid","options","params","auction","auctionExtended","bidderPot","bidderMeta","bidder","bidderToken","bidderPotToken","tokenMint","resource","data","serialize","toString","add","web3_js_1","keys","pubkey","isSigner","isWritable","programId","spl_token_1","AuctionProgram_1","PUBKEY"],"sources":["../../../src/transactions/CancelBid.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}