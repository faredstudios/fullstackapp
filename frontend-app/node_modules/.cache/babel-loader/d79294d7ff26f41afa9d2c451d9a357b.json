{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MasterEdition = exports.MasterEditionV2Data = exports.MasterEditionV1Data = void 0;\n\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\n\nconst bs58_1 = __importDefault(require(\"bs58\"));\n\nconst Edition_1 = require(\"./Edition\");\n\nconst MetadataProgram_1 = require(\"../MetadataProgram\");\n\nconst buffer_1 = require(\"buffer\");\n\nconst web3_js_1 = require(\"@solana/web3.js\");\n\nconst constants_1 = require(\"./constants\");\n\nclass MasterEditionV1Data extends mpl_core_1.Borsh.Data {\n  constructor(args) {\n    super(args);\n    this.key = constants_1.MetadataKey.MasterEditionV1;\n  }\n\n}\n\nexports.MasterEditionV1Data = MasterEditionV1Data;\nMasterEditionV1Data.SCHEMA = MasterEditionV1Data.struct([['key', 'u8'], ['supply', 'u64'], ['maxSupply', {\n  kind: 'option',\n  type: 'u64'\n}], ['printingMint', 'pubkeyAsString'], ['oneTimePrintingAuthorizationMint', 'pubkeyAsString']]);\n\nclass MasterEditionV2Data extends mpl_core_1.Borsh.Data {\n  constructor(args) {\n    super(args);\n    this.key = constants_1.MetadataKey.MasterEditionV2;\n  }\n\n}\n\nexports.MasterEditionV2Data = MasterEditionV2Data;\nMasterEditionV2Data.SCHEMA = MasterEditionV2Data.struct([['key', 'u8'], ['supply', 'u64'], ['maxSupply', {\n  kind: 'option',\n  type: 'u64'\n}]]);\n\nclass MasterEdition extends mpl_core_1.Account {\n  constructor(key, info) {\n    super(key, info);\n\n    if (!this.assertOwner(MetadataProgram_1.MetadataProgram.PUBKEY)) {\n      throw (0, mpl_core_1.ERROR_INVALID_OWNER)();\n    }\n\n    if (MasterEdition.isMasterEditionV1(this.info.data)) {\n      this.data = MasterEditionV1Data.deserialize(this.info.data);\n    } else if (MasterEdition.isMasterEditionV2(this.info.data)) {\n      this.data = MasterEditionV2Data.deserialize(this.info.data);\n    } else {\n      throw (0, mpl_core_1.ERROR_INVALID_ACCOUNT_DATA)();\n    }\n  }\n\n  static getPDA(mint) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return MetadataProgram_1.MetadataProgram.findProgramAddress([buffer_1.Buffer.from(MetadataProgram_1.MetadataProgram.PREFIX), MetadataProgram_1.MetadataProgram.PUBKEY.toBuffer(), new web3_js_1.PublicKey(mint).toBuffer(), buffer_1.Buffer.from(MasterEdition.EDITION_PREFIX)]);\n    });\n  }\n\n  static isCompatible(data) {\n    return MasterEdition.isMasterEditionV1(data) || MasterEdition.isMasterEditionV2(data);\n  }\n\n  static isMasterEditionV1(data) {\n    return data[0] === constants_1.MetadataKey.MasterEditionV1;\n  }\n\n  static isMasterEditionV2(data) {\n    return data[0] === constants_1.MetadataKey.MasterEditionV2;\n  }\n\n  getEditions(connection) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return (yield MetadataProgram_1.MetadataProgram.getProgramAccounts(connection, {\n        filters: [{\n          memcmp: {\n            offset: 0,\n            bytes: bs58_1.default.encode(buffer_1.Buffer.from([constants_1.MetadataKey.EditionV1]))\n          }\n        }, {\n          memcmp: {\n            offset: 1,\n            bytes: this.pubkey.toBase58()\n          }\n        }]\n      })).map(account => Edition_1.Edition.from(account));\n    });\n  }\n\n}\n\nexports.MasterEdition = MasterEdition;\nMasterEdition.EDITION_PREFIX = 'edition';","map":{"version":3,"mappings":"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","names":["MasterEditionV1Data","mpl_core_1","Data","constructor","args","key","constants_1","MasterEditionV1","exports","struct","kind","type","MasterEditionV2Data","MasterEditionV2","MasterEdition","info","assertOwner","MetadataProgram_1","PUBKEY","isMasterEditionV1","data","deserialize","isMasterEditionV2","getPDA","mint","findProgramAddress","buffer_1","from","PREFIX","toBuffer","web3_js_1","EDITION_PREFIX","isCompatible","getEditions","connection","getProgramAccounts","filters","memcmp","offset","bytes","bs58_1","encode","EditionV1","pubkey","toBase58","map","account","Edition_1"],"sources":["../../../src/accounts/MasterEdition.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}