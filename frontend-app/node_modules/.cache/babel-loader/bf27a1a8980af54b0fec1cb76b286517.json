{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MSI\\\\Documents\\\\CG\\\\fullstackapp\\\\frontend-app\\\\src\\\\containers\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useEffect, useState } from 'react';\nimport { Routes, Route, useNavigate } from 'react-router-dom';\nimport '../components/styles/App.css';\nimport { Provider } from \"react-redux\";\nimport { configureStore } from '../store';\nimport SwitchRoute from './SwitchRoute';\nimport background from '../components/images/daytoner2.jpg';\nimport Navbar from './Navbar';\nimport { authUser } from \"../store/actions/auth\";\nimport { apiCall } from \"../services/api\";\nimport { Connection, PublicKey, Transaction, clusterApiUrl, SystemProgram, Keypair, LAMPORTS_PER_SOL, sendAndConfirmTransaction } from \"@solana/web3.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isPhantomInstalled = window.solana && window.solana.isPhantom;\nconst store = configureStore();\n\nconst App = () => {\n  _s();\n\n  const [walletAddress, setWalletAddress] = useState(null);\n  const [username, setUsername] = useState(null);\n  const [balance, setBalance] = useState(0);\n  const navigate = useNavigate();\n  const connection = new Connection(clusterApiUrl('devnet'), 'confirmed');\n\n  const checkIfWalletIsConnected = async () => {\n    try {\n      const {\n        solana\n      } = window;\n      const connection = new Connection(clusterApiUrl('devnet'), 'confirmed');\n\n      if (solana) {\n        if (solana.isPhantom) {\n          console.log('Phantom wallet found!');\n          const response = await solana.connect({\n            onlyIfTrusted: true\n          });\n          const userData = {\n            walletID: response.publicKey.toString()\n          };\n          console.log('Connected with Public Key:', userData.walletID);\n          setWalletAddress(userData.walletID); //const airdropSignature = await connection.requestAirdrop(response.publicKey,LAMPORTS_PER_SOL,);\n          //await connection.confirmTransaction(airdropSignature);\n\n          const account = await connection.getAccountInfo(response.publicKey);\n          setBalance(account.lamports);\n          apiCall(\"post\", `/api/auth/signin`, userData).then(_ref => {\n            let {\n              token,\n              ...user\n            } = _ref;\n            setUsername(user.username);\n            console.log(\"User found:\", username);\n          }).catch(err => {\n            console.log(\"User not registered\");\n            navigate(\"/register\");\n          });\n        }\n      } else {\n        alert('Solana object not found! Get a Phantom Wallet');\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const connectWallet = async () => {\n    const {\n      solana\n    } = window;\n\n    if (solana) {\n      const response = await solana.connect();\n      const userData = {\n        walletID: response.publicKey.toString()\n      };\n      console.log('Connected with Public Key:', userData.walletID);\n      setWalletAddress(userData.walletID);\n      const account = await connection.getAccountInfo(response.publicKey);\n      setBalance(account.lamports);\n      apiCall(\"post\", `/api/auth/signin`, userData).then(_ref2 => {\n        let {\n          token,\n          ...user\n        } = _ref2;\n        setUsername(user.username);\n        console.log(\"User found:\", username);\n      }).catch(err => {\n        console.log(\"User not registered\");\n        navigate(\"/register\");\n      });\n    }\n  };\n\n  const sendSol = async () => {\n    let fromKeypair = Keypair.generate();\n    let toKeypair = Keypair.generate();\n    let transaction = new Transaction();\n    transaction.add(SystemProgram.transfer({\n      fromPubkey: fromKeypair.publicKey,\n      toPubkey: toKeypair.publicKey,\n      lamports: LAMPORTS_PER_SOL\n    }));\n    sendAndConfirmTransaction(connection, transaction, [walletAddress]);\n  };\n\n  function logout() {\n    setWalletAddress(null);\n    window.solana.request({\n      method: \"disconnect\"\n    });\n    window.solana.on('disconnect', () => console.log(\"disconnected!\"));\n  }\n\n  const renderNotConnectedContainer = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      class: \"connectbtn fullwidth\",\n      onClick: connectWallet,\n      children: \"CONNECT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Connect to Phantom Wallet to log in your account.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 3\n  }, this);\n\n  const renderConnectedUser = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          className: \"userName\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"userDP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 39\n          }, this), username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"dropdown\",\n          children: [!username && /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"settingsli\",\n            onClick: connectWallet,\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              children: \"Register Account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 72\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"settingsli\",\n            onClick: connectWallet,\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              children: \"Change Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 58\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"settingsli\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              children: \"Account Settings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 34\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"settingsli\",\n            onClick: sendSol,\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              children: \"Send SOL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 52\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"settingsli\",\n            onClick: logout,\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#logout\",\n              children: \"Logout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 51\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userCurrency\",\n      children: [Number(balance / LAMPORTS_PER_SOL).toFixed(4), \" SOL\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userSocial\",\n      children: \"Socials\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"friendlist\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"friendName\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"friendDP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 7\n        }, this), \" ExampleFriend01\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"friendName\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"friendDP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 7\n        }, this), \" ExampleFriend02\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"friendName\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"friendDP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 7\n        }, this), \" ExampleFriend03\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"friendName\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"friendDP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 7\n        }, this), \" ExampleFriend04\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 7\n  }, this);\n\n  useEffect(() => {\n    const onLoad = async () => {\n      await checkIfWalletIsConnected();\n    };\n\n    window.addEventListener('load', onLoad);\n    return () => window.removeEventListener('load', onLoad);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"background\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fadetop\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App\",\n          children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(SwitchRoute, {\n            walletID: walletAddress,\n            username: username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sideBar\",\n        children: [walletAddress && renderConnectedUser(), !walletAddress && renderNotConnectedContainer()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 3\n  }, this);\n};\n\n_s(App, \"vFIMVZYvw72PGGWg5QwtPBQPngs=\", false, function () {\n  return [useNavigate];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/MSI/Documents/CG/fullstackapp/frontend-app/src/containers/App.js"],"names":["React","Component","useEffect","useState","Routes","Route","useNavigate","Provider","configureStore","SwitchRoute","background","Navbar","authUser","apiCall","Connection","PublicKey","Transaction","clusterApiUrl","SystemProgram","Keypair","LAMPORTS_PER_SOL","sendAndConfirmTransaction","isPhantomInstalled","window","solana","isPhantom","store","App","walletAddress","setWalletAddress","username","setUsername","balance","setBalance","navigate","connection","checkIfWalletIsConnected","console","log","response","connect","onlyIfTrusted","userData","walletID","publicKey","toString","account","getAccountInfo","lamports","then","token","user","catch","err","alert","error","connectWallet","sendSol","fromKeypair","generate","toKeypair","transaction","add","transfer","fromPubkey","toPubkey","logout","request","method","on","renderNotConnectedContainer","renderConnectedUser","Number","toFixed","onLoad","addEventListener","removeEventListener"],"mappings":"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","sourcesContent":["import React, {Component, useEffect, useState} from 'react';\r\nimport {Routes, Route, useNavigate} from 'react-router-dom';\r\nimport '../components/styles/App.css';\r\nimport { Provider } from \"react-redux\";\r\nimport { configureStore } from '../store';\r\nimport SwitchRoute from './SwitchRoute';\r\nimport background from '../components/images/daytoner2.jpg';\r\nimport Navbar from './Navbar';\r\nimport { authUser } from \"../store/actions/auth\";\r\nimport { apiCall } from \"../services/api\";\r\nimport {\r\n  Connection,\r\n  PublicKey,\r\n  Transaction,\r\n  clusterApiUrl,\r\n  SystemProgram,\r\n  Keypair,\r\n  LAMPORTS_PER_SOL,\r\n  sendAndConfirmTransaction\r\n} from \"@solana/web3.js\";\r\n\r\ninterface PhantomProvider {\r\n  publicKey: PublicKey | null;\r\n  isConnected: boolean | null;\r\n  signTransaction: (transaction: Transaction) => Promise<Transaction>;\r\n  signAllTransactions: (transactions: Transaction[]) => Promise<Transaction[]>;\r\n  signMessage: (\r\n    message: Uint8Array | string,\r\n    display?: DisplayEncoding\r\n  ) => Promise<any>;\r\n  connect: (opts?: Partial<ConnectOpts>) => Promise<{ publicKey: PublicKey }>;\r\n  disconnect: () => Promise<void>;\r\n  on: (event: PhantomEvent, handler: (args: any) => void) => void;\r\n  request: (method: PhantomRequestMethod, params: any) => Promise<unknown>;\r\n}\r\n\r\nconst isPhantomInstalled = window.solana && window.solana.isPhantom\r\nconst store = configureStore()\r\n\r\nconst App = () => {\r\n\tconst [walletAddress, setWalletAddress] = useState(null);\r\n\tconst [username, setUsername] = useState(null);\r\n\tconst [balance, setBalance] = useState(0);\r\n\t\r\n\tconst navigate = useNavigate()\r\n\t\r\n\tconst connection = new Connection(clusterApiUrl('devnet'),'confirmed',);\r\n\r\n\tconst checkIfWalletIsConnected = async () => {\r\n\t\ttry {\r\n\t\t\tconst { solana } = window;\r\n\t\t\tconst connection = new Connection(clusterApiUrl('devnet'),'confirmed',);\r\n\r\n\t\t\tif (solana) {\r\n\t\t\t\tif (solana.isPhantom) {\r\n\t\t\t\t\tconsole.log('Phantom wallet found!');\r\n\t\t\t\t\tconst response = await solana.connect({ onlyIfTrusted: true });\r\n\t\t\t\t\tconst userData = {walletID: response.publicKey.toString()}\r\n\t\t\t\t\tconsole.log('Connected with Public Key:',userData.walletID);\r\n\t\t\t\t\tsetWalletAddress(userData.walletID);\r\n\t\t\t\t\t//const airdropSignature = await connection.requestAirdrop(response.publicKey,LAMPORTS_PER_SOL,);\r\n\t\t\t\t\t//await connection.confirmTransaction(airdropSignature);\r\n\t\t\t\t\tconst account = await connection.getAccountInfo(response.publicKey);\r\n\t\t\t\t\tsetBalance(account.lamports);\r\n\r\n\t\t\t\t\tapiCall(\"post\", `/api/auth/signin`, userData).then(({token, ...user}) => {\r\n\t\t\t\t\t\tsetUsername(user.username);\r\n\t\t\t\t\t\tconsole.log(\"User found:\",username);\r\n\t\t\t\t\t}).catch(err => {\r\n\t\t\t\t\t\tconsole.log(\"User not registered\");\r\n\t\t\t\t\t\tnavigate(\"/register\");\r\n\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\talert('Solana object not found! Get a Phantom Wallet');\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error(error);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\tconst connectWallet = async () => {\r\n\t\r\n\t\tconst { solana } = window;\r\n\t\tif (solana) {\r\n\t\t\tconst response = await solana.connect();\r\n\t\t\tconst userData = {walletID: response.publicKey.toString()}\r\n\t\t\tconsole.log('Connected with Public Key:', userData.walletID);\r\n\t\t\tsetWalletAddress(userData.walletID);\r\n\t\t\tconst account = await connection.getAccountInfo(response.publicKey);\r\n\t\t\tsetBalance(account.lamports);\r\n\t\t\tapiCall(\"post\", `/api/auth/signin`, userData).then(({token, ...user}) => {\r\n\t\t\t\tsetUsername(user.username);\r\n\t\t\t\tconsole.log(\"User found:\",username);\r\n\t\t\t}).catch(err => {\r\n\t\t\t\tconsole.log(\"User not registered\");\r\n\t\t\t\tnavigate(\"/register\");\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\tconst sendSol = async () => {\r\n\t\tlet fromKeypair = Keypair.generate();\r\n\t\tlet toKeypair = Keypair.generate();\r\n\t\tlet transaction = new Transaction();\r\n\r\n\t\ttransaction.add(\r\n\t\t  SystemProgram.transfer({\r\n\t\t\tfromPubkey: fromKeypair.publicKey,\r\n\t\t\ttoPubkey: toKeypair.publicKey,\r\n\t\t\tlamports: LAMPORTS_PER_SOL\r\n\t\t  })\r\n\t\t);\r\n\t\tsendAndConfirmTransaction(\r\n\t\t  connection,\r\n\t\t  transaction,\r\n\t\t  [walletAddress]\r\n\t\t);\r\n\t}\r\n\tfunction logout(){\r\n\t\tsetWalletAddress(null);\r\n\t\twindow.solana.request({ method: \"disconnect\" });\r\n\t\twindow.solana.on('disconnect', () => console.log(\"disconnected!\"));\r\n\t}\r\n\tconst renderNotConnectedContainer = () => (\r\n\t\t<div>\r\n\t\t\t<button class=\"connectbtn fullwidth\" onClick={connectWallet}>CONNECT</button>\r\n\t\t\t<div>Connect to Phantom Wallet to log in your account.</div>\r\n\t\t</div>\r\n\t );\r\n\t const renderConnectedUser = () => (\r\n\t     <div>\r\n\t\t\t<ul>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<a href=\"#\" className=\"userName\"><div className=\"userDP\"></div>{username}</a>\r\n\t\t\t\t\t<ul className=\"dropdown\">\r\n\t\t\t\t\t\t{!username && <li className=\"settingsli\" onClick={connectWallet}><a href=\"#\">Register Account</a></li>}\r\n\t\t\t\t\t\t<li className=\"settingsli\" onClick={connectWallet}><a href=\"#\">Change Username</a></li>\r\n\t\t\t\t\t\t<li className=\"settingsli\"><a href=\"#\">Account Settings</a></li>\r\n\t\t\t\t\t\t<li className=\"settingsli\" onClick={sendSol}><a href=\"#\">Send SOL</a></li>\r\n\t\t\t\t\t\t<li className=\"settingsli\" onClick={logout}><a href=\"#logout\">Logout</a></li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t\t<div className=\"userCurrency\">\r\n\t\t\t\t{Number(balance/LAMPORTS_PER_SOL).toFixed(4)} SOL\r\n\t\t\t</div>\r\n\t\t\t<div className=\"userSocial\">\r\n\t\t\t\tSocials\r\n\t\t\t</div>\r\n\t\t\t\t<ul className=\"friendlist\">\r\n\t\t\t\t\t<li className=\"friendName\">\r\n\t\t\t\t\t\t<div className=\"friendDP\"></div> ExampleFriend01\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className=\"friendName\">\r\n\t\t\t\t\t\t<div className=\"friendDP\"></div> ExampleFriend02\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className=\"friendName\">\r\n\t\t\t\t\t\t<div className=\"friendDP\"></div> ExampleFriend03\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className=\"friendName\">\r\n\t\t\t\t\t\t<div className=\"friendDP\"></div> ExampleFriend04\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t </div>\r\n\t );\r\n\r\n\tuseEffect(() => {\r\n\t\tconst onLoad = async () => {\r\n\t\t\t  await checkIfWalletIsConnected();\r\n\t\t};\r\n\t\twindow.addEventListener('load', onLoad);\r\n\t\treturn () => window.removeEventListener('load', onLoad);\r\n\t\t}, []);\r\n\r\n\r\n\t\treturn (\r\n\t\t<Provider store={store}>\r\n\t\t\t<div className=\"background\">\r\n\t\t\t\t<div className=\"fadetop\">\r\n\t\t\t\t\t<div className = \"App\">\r\n\t\t\t\t\t\t<Navbar/>\r\n\t\t\t\t\t\t<SwitchRoute walletID={walletAddress} username={username}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"sideBar\">\r\n\t\t\t\t\t{walletAddress && renderConnectedUser()}\r\n\t\t\t\t\t{!walletAddress && renderNotConnectedContainer()}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Provider>\r\n\t\t);\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}